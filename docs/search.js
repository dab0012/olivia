window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "olivia_finder", "modulename": "olivia_finder", "kind": "module", "doc": "<h2 id=\"introduction\"><strong>Introduction</strong></h2>\n\n<p>Olivia Finder is an open source tool that can be used to extract data from software package dependency networks in package managers. It is designed to work in conjunction with Olivia, and uses web-scraping techniques and CSV files as data sources. With Olivia Finder, you can easily extract information on package dependencies, versions, and other relevant data. This information can be used to analyze software packages and their dependencies, identify potential vulnerabilities or issues, and make informed decisions about which packages to use or avoid. Additionally, Olivia Finder is highly customizable and extensible, allowing you to tailor it to your specific needs and requirements.</p>\n\n<h2 id=\"quality-metrics\"><strong>Quality metrics</strong></h2>\n\n<p>A list of quality metrics is shown below. These metrics are calculated using the SonarCloud platform, which is integrated with the Github repository. \nThe metrics are updated automatically every time a new commit is made to the repository.</p>\n\n<p><a href=\"https://www.codacy.com/gh/dab0012/olivia-finder/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dab0012/olivia-finder&amp;utm_campaign=Badge_Grade\"><img src=\"https://app.codacy.com/project/badge/Grade/771e39014ceb48688cb9d341c705ecf9\" alt=\"Codacy Badge\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=ncloc\" alt=\"Lines of Code\" /></a> \n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=duplicated_lines_density\" alt=\"Duplicated Lines (%)\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=reliability_rating\" alt=\"Reliability Rating\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=alert_status\" alt=\"Quality Gate Status\" /></a></p>\n\n<p><a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=code_smells\" alt=\"Code Smells\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=sqale_rating\" alt=\"Maintainability Rating\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=security_rating\" alt=\"Security Rating\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=bugs\" alt=\"Bugs\" /></a>\n<a href=\"https://sonarcloud.io/summary/new_code?id=dab0012_olivia\"><img src=\"https://sonarcloud.io/api/project_badges/measure?project=dab0012_olivia&metric=vulnerabilities\" alt=\"Vulnerabilities\" /></a></p>\n\n<h2 id=\"intended-audience\"><strong>Intended audience</strong></h2>\n\n<p>Olivia Finder is destined to be used by developers, researchers and centralized packages interested in the identification and analysis of vulnerabilities. </p>\n\n<p>It is designed to be used jointly with Olivia, suggesting that users must be familiar with this related tool. </p>\n\n<p>In general, users are expected to have technical knowledge and experience in handling networks of software packages.</p>\n\n<h2 id=\"open-in-deepnote\"><strong>Open in Deepnote</strong></h2>\n\n<p>Run olivia-finder introduction notebook in Deepnote cloud \n<br></p>\n\n<p><a href=\"https://deepnote.com/workspace/olivia-0732-b407de18-1731-4b54-b602-aa8db84aa932/project/olivia-finder-627b89b5-a14d-43dd-8e37-100bca8981fc/notebook/olivia-finder%2Folivia_finder%2Fnotebooks%2Folivia_finder_implementation_details-5721bfb8509248bdae331a339efef4aa\"><img src=\"https://deepnote.com/buttons/try-in-a-jupyter-notebook-white-small.svg\"></a></p>\n\n<h2 id=\"license\"><strong>License</strong></h2>\n\n<p>Olivia Finder is distributed under the MIT License. See LICENSE file for details.</p>\n\n<h2 id=\"previous-tfg-notebooks-olivia\"><strong>Previous TFG notebooks (Olivia)</strong></h2>\n\n<p>A series of notebooks have been developed to show the implementation details of the Olivia tool. These notebooks are available in the following links:</p>\n\n<p><a href=\"https://github.com/dsr0018/olivia&quot;&gt;https://github.com/dsr0018/olivia](https://img.shields.io/badge/Github-Olivia-purple)](https://github.com/dsr0018/olivia&lt;/a&gt;\"><img src=\"https://img.shields.io/badge/Github-Olivia-purple\" alt=\"&lt;a href=&quot;https://github.com/dsr0018/olivia\" /></a></p>\n\n<p><a href=\"https://github.com/dsr0018/olivia/blob/master/A-Model.ipynb\"><img src=\"https://img.shields.io/badge/Jupyter-Olivia%20--%20Model-%23fa0297\" alt=\"Olivia - Model\" /></a>\n<a href=\"https://github.com/dsr0018/olivia/blob/master/B-Analysis.ipynb\"><img src=\"https://img.shields.io/badge/Jupyter-Olivia%20--%20Analysis-%23fa0297\" alt=\"Olivia - Analysis\" /></a>\n<a href=\"https://github.com/dsr0018/olivia/blob/master/C-Immunization.ipynb\"><img src=\"https://img.shields.io/badge/Jupyter-Olivia%20--%20Imunization-%23fa0297\" alt=\"Olivia - Imunization\" /></a></p>\n\n<p><strong>Try it in Google colab</strong></p>\n\n<p>The notebooks can be executed in Google Colab. To do this, you must have a Google account and click on the following links:</p>\n\n<p><a href=\"https://colab.research.google.com/github/dab0012/olivia-finder/blob/master/olivia/Olivia.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\" /></a></p>\n\n<p><strong>Acknowledgements</strong></p>\n\n<p>Olivia Finder uses data from the Olivia project, which was created by @dsr0018</p>\n\n<p>The Olivia project is distributed under the MIT License.</p>\n\n<h2 id=\"author\"><strong>Author</strong></h2>\n\n<p><strong>Daniel Alonso B\u00e1scones</strong>, (dab0012&lt;at>alu.ubu.es)</p>\n\n<p>University of Burgos, 2023</p>\n"}, {"fullname": "olivia_finder.data_source", "modulename": "olivia_finder.data_source", "kind": "module", "doc": "<h1 id=\"subpackage-olivia_finderdatasource\"><strong>Subpackage olivia_finder.DataSource</strong></h1>\n\n<h2 id=\"description\">Description</h2>\n\n<p>This package is responsible for providing a base data structure for all the derivated classes whose purpose is the obtaining data from a specific source.</p>\n\n<p>It is composed of several modules:</p>\n\n<h2 id=\"package-structure\">Package structure</h2>\n\n<pre><code>\u251c\u2500\u2500 csv_ds.py\n\u251c\u2500\u2500 data_source.py\n\u251c\u2500\u2500 librariesio_ds.py\n\u251c\u2500\u2500 repository_scrapers\n\u2502   \u251c\u2500\u2500 bioconductor.py\n\u2502   \u251c\u2500\u2500 cran.py\n\u2502   \u251c\u2500\u2500 npm.py\n\u2502   \u251c\u2500\u2500 pypi.py\n\u2502   \u2514\u2500\u2500 r.py\n\u2514\u2500\u2500 scraper_ds.py\n</code></pre>\n\n<h2 id=\"package-modules\">Package modules</h2>\n\n<ul>\n<li><p><strong><code>olivia_finder.data_source.data_source</code></strong></p>\n\n<p>Implements the abstract class Datasource, which is the base class of the rest of the implementations</p></li>\n<li><p><strong><code>olivia_finder.data_source.csv_ds</code></strong></p>\n\n<p>Implement datasource for *.csv files</p></li>\n<li><p><strong><code>olivia_finder.data_source.librariesio_ds</code></strong></p>\n\n<p>Implements datasource for the API of Libraries.io</p></li>\n<li><p><strong><code>olivia_finder.data_source.scraper_ds</code></strong></p>\n\n<p>Implements the abstract class ScraperDataSource, which is the base class of customized implementations for each repository</p></li>\n<li><p><strong><code>olivia_finder.data_source.repository_scrapers</code></strong></p>\n\n<p>Inside there are several implementations based on <strong>DataSource with web Scraping</strong> for <strong>CRAN</strong>, <strong>Bioconductor</strong>, <strong>NPM</strong> and <strong>PyPI</strong></p>\n\n<ul>\n<li><strong><code>olivia_finder.data_source.repository_scrapers.cran</code></strong></li>\n<li><strong><code>olivia_finder.data_source.repository_scrapers.bioconductor</code></strong></li>\n<li><strong><code>olivia_finder.data_source.repository_scrapers.npm</code></strong></li>\n<li><strong><code>olivia_finder.data_source.repository_scrapers.pypi</code></strong></li>\n</ul></li>\n</ul>\n\n<h1 id=\"implementations\"><strong>Implementations</strong></h1>\n\n<h2 id=\"web-scraping-based\"><strong>Web Scraping-Based</strong></h2>\n\n<h3 id=\"constructor\"><strong>Constructor</strong></h3>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<ul>\n<li>The default constructor does not receive parameters</li>\n<li>The number of optional parameters depends on the implementation, but as a rule we can define a name and a description (With the purpose of offering information)</li>\n<li>The most relevant parameter is the RequestHandler object, which will use by the webscraping based DataSource to make requests to the website to which it refers</li>\n</ul>\n\n</div>\n\n<p><strong>Implementation for CRAN</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_ds</span> <span class=\"o\">=</span> <span class=\"n\">CranScraper</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><strong>Implementation for Bioconductor</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_scraper</span> <span class=\"o\">=</span> <span class=\"n\">BioconductorScraper</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><strong>Implementation for PyPi</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_scraper</span> <span class=\"o\">=</span> <span class=\"n\">PypiScraper</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><strong>Implementation for NPM</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">npm_scraper</span> <span class=\"o\">=</span> <span class=\"n\">NpmScraper</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h3 id=\"obtain-package-names\"><strong>Obtain package names</strong></h3>\n\n<p><strong>CRAN package names</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_ds</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()[:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<pre><code>['A3',\n 'AalenJohansen',\n 'AATtools',\n 'ABACUS',\n 'abbreviate',\n 'abbyyR',\n 'abc',\n 'abc.data',\n 'ABC.RAP',\n 'ABCanalysis']\n</code></pre>\n\n<p><strong>Bioconductor package names</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()[:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<pre><code>['ABSSeq',\n 'ABarray',\n 'ACE',\n 'ACME',\n 'ADAM',\n 'ADAMgui',\n 'ADImpute',\n 'ADaCGH2',\n 'AGDEX',\n 'AHMassBank']\n</code></pre>\n\n<p><strong>PyPi package names</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()[:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<pre><code>['0',\n '0-._.-._.-._.-._.-._.-._.-0',\n '000',\n '00000a',\n '0.0.1',\n '00101s',\n '00print_lol',\n '00SMALINUX',\n '0101',\n '0121']\n</code></pre>\n\n<p><strong>NPM package names</strong></p>\n\n<div class=\"pdoc-alert pdoc-alert-danger\">\n\n<ul>\n<li>This process is very expensive, the implementation is functional but its use is not recommended unless it is necessary</li>\n<li><strong>It is recommended to import the list of npm packages as a txt file</strong></li>\n</ul>\n\n</div>\n\n<p>Output folder can be configured in <code>config.ini</code> file <code>working_dir</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">npm_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">(</span>\n    <span class=\"n\">page_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>                          <span class=\"c1\"># Number of packages to obtain per request</span>\n    <span class=\"n\">save_chunks</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>                       <span class=\"c1\"># Save packages in a chunk file</span>\n    <span class=\"n\">show_progress_bar</span><span class=\"o\">=</span><span class=\"kc\">True</span>                  <span class=\"c1\"># Show progress bar</span>\n<span class=\"p\">)[:</span><span class=\"mi\">10</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>The file with the NPM package list is the following</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;$<span class=\"w\"> </span>wc<span class=\"w\"> </span>-l<span class=\"w\"> </span>results/package_lists/npm_packages.txt\n</code></pre>\n</div>\n\n<pre><code>2688314 results/package_lists/npm_packages.txt\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;$<span class=\"w\"> </span>tail<span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"m\">20</span><span class=\"w\"> </span>results/package_lists/npm_packages.txt\n</code></pre>\n</div>\n\n<pre><code>zzzzz-first-module\nzzzzz-test\nzzzzz-ui\nzzzzz0803\nzzzzz123321\nzzzzz124554\nzzzzz55555\nzzzzzwszzzz\nzzzzzx-ui\nzzzzzz\nzzzzzz-test\nzzzzzz65432\nzzzzzzxl\nzzzzzzz\nzzzzzzzz-pppppp\nzzzzzzzzztest\nzzzzzzzzzzzz\nzzzzzzzzzzzzzzzzz\nzzzzzzzzzzzzzzzzzzzzzzzzzz-this-is-a-empty-test-pck-dont-use-it\nzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n</code></pre>\n\n<h3 id=\"obtain-package-data\">Obtain package data</h3>\n\n<p>CRAN data of <strong>A3</strong> package</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_ds</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;A3&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'A3',\n 'version': '1.0.0',\n 'dependencies': [{'name': 'R', 'version': '\u2265 2.15.0'},\n  {'name': 'xtable', 'version': ''},\n  {'name': 'pbapply', 'version': ''}],\n 'url': 'https://cran.r-project.org/package=A3'}\n</code></pre>\n\n<p>If the petition fails we will obtain <code>None</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">non_existent_package</span> <span class=\"o\">=</span> <span class=\"n\">cran_ds</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;NON_EXISTENT_PACKAGE&#39;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">non_existent_package</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>None\n</code></pre>\n\n<p>Bioconductor data of <strong>a4</strong> package</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;a4&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'a4',\n 'version': '1.48.0',\n 'dependencies': [{'name': 'a4Base', 'version': ''},\n  {'name': 'a4Preproc', 'version': ''},\n  {'name': 'a4Classif', 'version': ''},\n  {'name': 'a4Core', 'version': ''},\n  {'name': 'a4Reporting', 'version': ''}],\n 'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4.html'}\n</code></pre>\n\n<p>PyPi data od <strong>networkx</strong> package</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;networkx&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'networkx',\n 'version': '3.1',\n 'url': 'https://pypi.org/project/networkx/',\n 'dependencies': [{'name': 'numpy', 'version': None},\n  {'name': 'scipy', 'version': None},\n  {'name': 'matplotlib', 'version': None},\n  {'name': 'pandas', 'version': None},\n  {'name': 'pre', 'version': None},\n  {'name': 'mypy', 'version': None},\n  {'name': 'sphinx', 'version': None},\n  {'name': 'pydata', 'version': None},\n  {'name': 'numpydoc', 'version': None},\n  {'name': 'pillow', 'version': None},\n  {'name': 'nb2plots', 'version': None},\n  {'name': 'texext', 'version': None},\n  {'name': 'lxml', 'version': None},\n  {'name': 'pygraphviz', 'version': None},\n  {'name': 'pydot', 'version': None},\n  {'name': 'sympy', 'version': None},\n  {'name': 'pytest', 'version': None},\n  {'name': 'codecov', 'version': None}]}\n</code></pre>\n\n<p>NPM data of <strong>aws-sdk</strong> package</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">npm_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;aws-sdk&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'aws-sdk',\n 'version': '2.1368.0',\n 'dependencies': [{'name': 'buffer', 'version': '4.9.2'},\n  {'name': 'events', 'version': '1.1.1'},\n  {'name': 'ieee754', 'version': '1.1.13'},\n  {'name': 'jmespath', 'version': '0.16.0'},\n  {'name': 'querystring', 'version': '0.2.0'},\n  {'name': 'sax', 'version': '1.2.1'},\n  {'name': 'url', 'version': '0.10.3'},\n  {'name': 'util', 'version': '0.12.4'},\n  {'name': 'uuid', 'version': '8.0.0'},\n  {'name': 'xml2js', 'version': '0.5.0'}],\n 'url': 'https://www.npmjs.com/package/aws-sdk'}\n</code></pre>\n\n<h3 id=\"obtain-a-list-of-packages-data\">Obtain a list of packages data</h3>\n\n<p>CRAN data for the packages <strong>A3</strong>, <strong>AER</strong> y a <strong><em>non existent package</em></strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_ds</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;A3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;AER&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'A3',\n   'version': '1.0.0',\n   'dependencies': [{'name': 'R', 'version': '\u2265 2.15.0'},\n    {'name': 'xtable', 'version': ''},\n    {'name': 'pbapply', 'version': ''}],\n   'url': 'https://cran.r-project.org/package=A3'},\n  {'name': 'AER',\n   'version': '1.2-10',\n   'dependencies': [{'name': 'R', 'version': '\u2265 3.0.0'},\n    {'name': 'car', 'version': '\u2265 2.0-19'},\n    {'name': 'lmtest', 'version': ''},\n    {'name': 'sandwich', 'version': '\u2265 2.4-0'},\n    {'name': 'survival', 'version': '\u2265 2.37-5'},\n    {'name': 'zoo', 'version': ''},\n    {'name': 'stats', 'version': ''},\n    {'name': 'Formula', 'version': '\u2265 0.2-0'}],\n   'url': 'https://cran.r-project.org/package=AER'}],\n ['NON_EXISTING_PACKAGE'])\n</code></pre>\n\n<p>Bioconductor data for the packages <strong>TDARACNE</strong>, <strong>ASICS</strong> and <strong><em>a non existent package</em></strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">tqdm</span> <span class=\"kn\">import</span> <span class=\"n\">tqdm</span>\n\n<span class=\"n\">bioconductor_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">(</span>\n    <span class=\"n\">package_names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;a4&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a4Preproc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a4Classif&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a4Core&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;a4Base&#39;</span><span class=\"p\">],</span>\n    <span class=\"n\">progress_bar</span><span class=\"o\">=</span><span class=\"n\">tqdm</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'a4',\n   'version': '1.48.0',\n   'dependencies': [{'name': 'a4Base', 'version': ''},\n    {'name': 'a4Preproc', 'version': ''},\n    {'name': 'a4Classif', 'version': ''},\n    {'name': 'a4Core', 'version': ''},\n    {'name': 'a4Reporting', 'version': ''}],\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4.html'},\n  {'name': 'a4Preproc',\n   'version': '1.48.0',\n   'dependencies': [{'name': 'BiocGenerics', 'version': ''},\n    {'name': 'Biobase', 'version': ''}],\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4Preproc.html'},\n  {'name': 'a4Classif',\n   'version': '1.48.0',\n   'dependencies': [{'name': 'a4Core', 'version': ''},\n    {'name': 'a4Preproc', 'version': ''},\n    {'name': 'methods', 'version': ''},\n    {'name': 'Biobase', 'version': ''},\n    {'name': 'ROCR', 'version': ''},\n    {'name': 'pamr', 'version': ''},\n    {'name': 'glmnet', 'version': ''},\n    {'name': 'varSelRF', 'version': ''},\n    {'name': 'utils', 'version': ''},\n    {'name': 'graphics', 'version': ''},\n    {'name': 'stats', 'version': ''}],\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4Classif.html'},\n  {'name': 'a4Core',\n   'version': '1.48.0',\n   'dependencies': [{'name': 'Biobase', 'version': ''},\n    {'name': 'glmnet', 'version': ''},\n    {'name': 'methods', 'version': ''},\n    {'name': 'stats', 'version': ''}],\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4Core.html'},\n  {'name': 'a4Base',\n   'version': '1.48.0',\n   'dependencies': [{'name': 'a4Preproc', 'version': ''},\n    {'name': 'a4Core', 'version': ''},\n    {'name': 'methods', 'version': ''},\n    {'name': 'graphics', 'version': ''},\n    {'name': 'grid', 'version': ''},\n    {'name': 'Biobase', 'version': ''},\n    {'name': 'annaffy', 'version': ''},\n    {'name': 'mpm', 'version': ''},\n    {'name': 'genefilter', 'version': ''},\n    {'name': 'limma', 'version': ''},\n    {'name': 'multtest', 'version': ''},\n    {'name': 'glmnet', 'version': ''},\n    {'name': 'gplots', 'version': ''}],\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/a4Base.html'}],\n [])\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;networkx&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;requests&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;tqdm&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'networkx',\n   'version': '3.1',\n   'url': 'https://pypi.org/project/networkx/',\n   'dependencies': [{'name': 'numpy', 'version': None},\n    {'name': 'scipy', 'version': None},\n    {'name': 'matplotlib', 'version': None},\n    {'name': 'pandas', 'version': None},\n    {'name': 'pre', 'version': None},\n    {'name': 'mypy', 'version': None},\n    {'name': 'sphinx', 'version': None},\n    {'name': 'pydata', 'version': None},\n    {'name': 'numpydoc', 'version': None},\n    {'name': 'pillow', 'version': None},\n    {'name': 'nb2plots', 'version': None},\n    {'name': 'texext', 'version': None},\n    {'name': 'lxml', 'version': None},\n    {'name': 'pygraphviz', 'version': None},\n    {'name': 'pydot', 'version': None},\n    {'name': 'sympy', 'version': None},\n    {'name': 'pytest', 'version': None},\n    {'name': 'codecov', 'version': None}]},\n  {'name': 'requests',\n   'version': '2.29.0',\n   'url': 'https://pypi.org/project/requests/',\n   'dependencies': [{'name': 'charset', 'version': None},\n    {'name': 'idna', 'version': None},\n    {'name': 'urllib3', 'version': None},\n    {'name': 'certifi', 'version': None},\n    {'name': 'PySocks', 'version': None},\n    {'name': 'chardet', 'version': None}]},\n  {'name': 'tqdm',\n   'version': '4.65.0',\n   'url': 'https://pypi.org/project/tqdm/',\n   'dependencies': [{'name': 'colorama', 'version': None},\n    {'name': 'py', 'version': None},\n    {'name': 'twine', 'version': None},\n    {'name': 'wheel', 'version': None},\n    {'name': 'ipywidgets', 'version': None},\n    {'name': 'slack', 'version': None},\n    {'name': 'requests', 'version': None}]}],\n ['NON_EXISTING_PACKAGE'])\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">npm_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;aws-sdk&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;request&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'aws-sdk',\n   'version': '2.1368.0',\n   'dependencies': [{'name': 'buffer', 'version': '4.9.2'},\n    {'name': 'events', 'version': '1.1.1'},\n    {'name': 'ieee754', 'version': '1.1.13'},\n    {'name': 'jmespath', 'version': '0.16.0'},\n    {'name': 'querystring', 'version': '0.2.0'},\n    {'name': 'sax', 'version': '1.2.1'},\n    {'name': 'url', 'version': '0.10.3'},\n    {'name': 'util', 'version': '0.12.4'},\n    {'name': 'uuid', 'version': '8.0.0'},\n    {'name': 'xml2js', 'version': '0.5.0'}],\n   'url': 'https://www.npmjs.com/package/aws-sdk'},\n  {'name': 'request',\n   'version': '2.88.2',\n   'dependencies': [{'name': 'aws-sign2', 'version': '~0.7.0'},\n    {'name': 'aws4', 'version': '1.8.0'},\n    {'name': 'caseless', 'version': '~0.12.0'},\n    {'name': 'combined-stream', 'version': '~1.0.6'},\n    {'name': 'extend', 'version': '~3.0.2'},\n    {'name': 'forever-agent', 'version': '~0.6.1'},\n    {'name': 'form-data', 'version': '~2.3.2'},\n    {'name': 'har-validator', 'version': '~5.1.3'},\n    {'name': 'http-signature', 'version': '~1.2.0'},\n    {'name': 'is-typedarray', 'version': '~1.0.0'},\n    {'name': 'isstream', 'version': '~0.1.2'},\n    {'name': 'json-stringify-safe', 'version': '~5.0.1'},\n    {'name': 'mime-types', 'version': '~2.1.19'},\n    {'name': 'oauth-sign', 'version': '~0.9.0'},\n    {'name': 'performance-now', 'version': '2.1.0'},\n    {'name': 'qs', 'version': '~6.5.2'},\n    {'name': 'safe-buffer', 'version': '5.1.2'},\n    {'name': 'tough-cookie', 'version': '~2.5.0'},\n    {'name': 'tunnel-agent', 'version': '0.6.0'},\n    {'name': 'uuid', 'version': '3.3.2'}],\n   'url': 'https://www.npmjs.com/package/request'}],\n ['NON_EXISTING_PACKAGE'])\n</code></pre>\n\n<h2 id=\"csv-based\"><strong>CSV-Based</strong></h2>\n\n<p>The main idea of this implementation is to get the data from a CSV file.</p>\n\n<h3 id=\"constructor-2\">Constructor</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_csv</span> <span class=\"o\">=</span> <span class=\"n\">CSVDataSource</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;results/csv_datasets/cran_adjlist_scraping.csv&quot;</span><span class=\"p\">,</span>   <span class=\"c1\"># Path to the CSV file</span>\n    <span class=\"s2\">&quot;CRAN&quot;</span><span class=\"p\">,</span>                                             <span class=\"c1\"># Name of the data source</span>\n    <span class=\"c1\"># Description of the data source</span>\n    <span class=\"s2\">&quot;CRAN as a CSV file&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the dependencies</span>\n    <span class=\"n\">dependent_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the name of the package</span>\n    <span class=\"n\">dependency_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;dependency&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the version of the package</span>\n    <span class=\"n\">dependent_version_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;version&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the version of the dependency</span>\n    <span class=\"n\">dependency_version_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;dependency_version&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the URL of the package</span>\n    <span class=\"n\">dependent_url_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_csv</span> <span class=\"o\">=</span> <span class=\"n\">CSVDataSource</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;results/csv_datasets/bioconductor_adjlist_scraping.csv&quot;</span><span class=\"p\">,</span>   <span class=\"c1\"># Path to the CSV file</span>\n    <span class=\"c1\"># Name of the data source</span>\n    <span class=\"s2\">&quot;Bioconductor&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Description of the data source</span>\n    <span class=\"s2\">&quot;Bioconductor as a CSV file&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the dependencies</span>\n    <span class=\"n\">dependent_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the name of the package</span>\n    <span class=\"n\">dependency_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;dependency&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the version of the package</span>\n    <span class=\"n\">dependent_version_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;version&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the version of the dependency</span>\n    <span class=\"n\">dependency_version_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;dependency_version&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the field that contains the URL of the package</span>\n    <span class=\"n\">dependent_url_field</span><span class=\"o\">=</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"obtain-package-data-2\">Obtain package data</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_csv</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;A3&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'A3',\n 'version': '1.0.0',\n 'url': 'https://cran.r-project.org/package=A3',\n 'dependencies': [{'name': 'R', 'version': '\u2265 2.15.0'},\n  {'name': 'xtable', 'version': nan},\n  {'name': 'pbapply', 'version': nan}]}\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_csv</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;TDARACNE&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'TDARACNE',\n 'version': '1.47.0',\n 'url': 'https://www.bioconductor.org/packages/release/bioc/html/TDARACNE.html',\n 'dependencies': [{'name': 'GenKern', 'version': nan},\n  {'name': 'Rgraphviz', 'version': nan},\n  {'name': 'Biobase', 'version': nan}]}\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_csv</span><span class=\"o\">.</span><span class=\"n\">generate_package_dependency_network</span><span class=\"p\">(</span><span class=\"s2\">&quot;AER&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'AER': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'car', 'version': '\u2265 2.0-19'},\n  {'name': 'lmtest', 'version': nan},\n  {'name': 'sandwich', 'version': '\u2265 2.4-0'},\n  {'name': 'survival', 'version': '\u2265 2.37-5'},\n  {'name': 'zoo', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'Formula', 'version': '\u2265 0.2-0'}],\n 'car': [{'name': 'R', 'version': '\u2265 3.5.0'},\n  {'name': 'carData', 'version': '\u2265 3.0-0'},\n  {'name': 'abind', 'version': nan},\n  {'name': 'MASS', 'version': nan},\n  {'name': 'mgcv', 'version': nan},\n  {'name': 'nnet', 'version': nan},\n  {'name': 'pbkrtest', 'version': '\u2265 0.4-4'},\n  {'name': 'quantreg', 'version': nan},\n  {'name': 'grDevices', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'lme4', 'version': '\u2265 1.1-27.1'},\n  {'name': 'nlme', 'version': nan},\n  {'name': 'scales', 'version': nan}],\n 'carData': [{'name': 'R', 'version': '\u2265 3.5.0'}],\n 'abind': [{'name': 'R', 'version': '\u2265 1.5.0'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'MASS': [{'name': 'R', 'version': '\u2265 3.3.0'},\n  {'name': 'grDevices', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'methods', 'version': nan}],\n 'mgcv': [{'name': 'R', 'version': '\u2265 3.6.0'},\n  {'name': 'nlme', 'version': '\u2265 3.1-64'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'Matrix', 'version': nan},\n  {'name': 'splines', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'nlme': [{'name': 'R', 'version': '\u2265 3.5.0'},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'lattice', 'version': nan}],\n 'lattice': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'grid', 'version': nan},\n  {'name': 'grDevices', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'Matrix': [{'name': 'R', 'version': '\u2265 3.5.0'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'grid', 'version': nan},\n  {'name': 'lattice', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'nnet': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'pbkrtest': [{'name': 'R', 'version': '\u2265 4.1.0'},\n  {'name': 'lme4', 'version': '\u2265 1.1.31'},\n  {'name': 'broom', 'version': nan},\n  {'name': 'dplyr', 'version': nan},\n  {'name': 'MASS', 'version': nan},\n  {'name': 'Matrix', 'version': '\u2265 1.2.3'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'numDeriv', 'version': nan},\n  {'name': 'parallel', 'version': nan}],\n 'lme4': [{'name': 'R', 'version': '\u2265 3.5.0'},\n  {'name': 'Matrix', 'version': '\u2265 1.2-1'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'grid', 'version': nan},\n  {'name': 'splines', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'parallel', 'version': nan},\n  {'name': 'MASS', 'version': nan},\n  {'name': 'lattice', 'version': nan},\n  {'name': 'boot', 'version': nan},\n  {'name': 'nlme', 'version': '\u2265 3.1-123'},\n  {'name': 'minqa', 'version': '\u2265 1.1.15'},\n  {'name': 'nloptr', 'version': '\u2265 1.0.4'}],\n 'boot': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'stats', 'version': nan}],\n 'minqa': [{'name': 'Rcpp', 'version': '\u2265 0.9.10'}],\n 'broom': [{'name': 'R', 'version': '\u2265 3.1'},\n  {'name': 'backports', 'version': nan},\n  {'name': 'dplyr', 'version': '\u2265 1.0.0'},\n  {'name': 'ellipsis', 'version': nan},\n  {'name': 'generics', 'version': '\u2265 0.0.2'},\n  {'name': 'glue', 'version': nan},\n  {'name': 'purrr', 'version': nan},\n  {'name': 'rlang', 'version': nan},\n  {'name': 'stringr', 'version': nan},\n  {'name': 'tibble', 'version': '\u2265 3.0.0'},\n  {'name': 'tidyr', 'version': '\u22651.0.0'}],\n 'backports': [{'name': 'R', 'version': '\u2265 3.0.0'}],\n 'dplyr': [{'name': 'R', 'version': '\u2265 3.4.0'},\n  {'name': 'cli', 'version': '\u2265 3.4.0'},\n  {'name': 'generics', 'version': nan},\n  {'name': 'glue', 'version': '\u2265 1.3.2'},\n  {'name': 'lifecycle', 'version': '\u22651.0.3'},\n  {'name': 'magrittr', 'version': '\u2265 1.5'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'pillar', 'version': '\u2265 1.5.1'},\n  {'name': 'R6', 'version': nan},\n  {'name': 'rlang', 'version': '\u2265 1.0.6'},\n  {'name': 'tibble', 'version': '\u2265 2.1.3'},\n  {'name': 'tidyselect', 'version': '\u2265 1.2.0'},\n  {'name': 'utils', 'version': nan},\n  {'name': 'vctrs', 'version': '\u2265 0.5.2'}],\n 'ellipsis': [{'name': 'R', 'version': '\u2265 3.2'},\n  {'name': 'rlang', 'version': '\u2265 0.3.0'}],\n 'generics': [{'name': 'R', 'version': '\u2265 3.2'},\n  {'name': 'methods', 'version': nan}],\n 'glue': [{'name': 'R', 'version': '\u2265 3.4'},\n  {'name': 'methods', 'version': nan}],\n 'purrr': [{'name': 'R', 'version': '\u2265 3.4.0'},\n  {'name': 'cli', 'version': '\u2265 3.4.0'},\n  {'name': 'lifecycle', 'version': '\u2265 1.0.3'},\n  {'name': 'magrittr', 'version': '\u2265 1.5.0'},\n  {'name': 'rlang', 'version': '\u2265 0.4.10'},\n  {'name': 'vctrs', 'version': '\u2265 0.5.0'}],\n 'rlang': [{'name': 'R', 'version': '\u2265 3.4.0'},\n  {'name': 'utils', 'version': nan}],\n 'stringr': [{'name': 'R', 'version': '\u2265 3.3'},\n  {'name': 'cli', 'version': nan},\n  {'name': 'glue', 'version': '\u2265 1.6.1'},\n  {'name': 'lifecycle', 'version': '\u2265 1.0.3'},\n  {'name': 'magrittr', 'version': nan},\n  {'name': 'rlang', 'version': '\u2265 1.0.0'},\n  {'name': 'stringi', 'version': '\u2265 1.5.3'},\n  {'name': 'vctrs', 'version': nan}],\n 'tibble': [{'name': 'R', 'version': '\u2265 3.1.0'},\n  {'name': 'fansi', 'version': '\u2265 0.4.0'},\n  {'name': 'lifecycle', 'version': '\u2265 1.0.0'},\n  {'name': 'magrittr', 'version': nan},\n  {'name': 'methods', 'version': nan},\n  {'name': 'pillar', 'version': '\u2265 1.7.0'},\n  {'name': 'pkgconfig', 'version': nan},\n  {'name': 'rlang', 'version': '\u2265 1.0.2'},\n  {'name': 'utils', 'version': nan},\n  {'name': 'vctrs', 'version': '\u2265 0.3.8'}],\n 'tidyr': [{'name': 'R', 'version': '\u2265 3.4.0'},\n  {'name': 'cli', 'version': '\u2265 3.4.1'},\n  {'name': 'dplyr', 'version': '\u2265 1.0.10'},\n  {'name': 'glue', 'version': nan},\n  {'name': 'lifecycle', 'version': '\u2265 1.0.3'},\n  {'name': 'magrittr', 'version': nan},\n  {'name': 'purrr', 'version': '\u2265 1.0.1'},\n  {'name': 'rlang', 'version': '\u2265 1.0.4'},\n  {'name': 'stringr', 'version': '\u22651.5.0'},\n  {'name': 'tibble', 'version': '\u2265 2.1.1'},\n  {'name': 'tidyselect', 'version': '\u2265 1.2.0'},\n  {'name': 'utils', 'version': nan},\n  {'name': 'vctrs', 'version': '\u2265 0.5.2'}],\n 'numDeriv': [{'name': 'R', 'version': '\u2265 2.11.1'}],\n 'quantreg': [{'name': 'R', 'version': '\u2265 3.5'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'SparseM', 'version': nan},\n  {'name': 'methods', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'Matrix', 'version': nan},\n  {'name': 'MatrixModels', 'version': nan},\n  {'name': 'survival', 'version': nan},\n  {'name': 'MASS', 'version': nan}],\n 'SparseM': [{'name': 'R', 'version': '\u2265 2.15'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'MatrixModels': [{'name': 'R', 'version': '\u2265 3.6.0'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'methods', 'version': nan},\n  {'name': 'Matrix', 'version': '\u2265 1.4-2'}],\n 'survival': [{'name': 'R', 'version': '\u2265 3.5.0'},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'Matrix', 'version': nan},\n  {'name': 'methods', 'version': nan},\n  {'name': 'splines', 'version': nan},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan}],\n 'scales': [{'name': 'R', 'version': '\u2265 3.2'},\n  {'name': 'farver', 'version': '\u2265 2.0.3'},\n  {'name': 'labeling', 'version': nan},\n  {'name': 'lifecycle', 'version': nan},\n  {'name': 'munsell', 'version': '\u2265 0.5'},\n  {'name': 'R6', 'version': nan},\n  {'name': 'RColorBrewer', 'version': nan},\n  {'name': 'rlang', 'version': '\u2265 1.0.0'},\n  {'name': 'viridisLite', 'version': nan}],\n 'labeling': [{'name': 'stats', 'version': nan},\n  {'name': 'graphics', 'version': nan}],\n 'lifecycle': [{'name': 'R', 'version': '\u2265 3.4'},\n  {'name': 'cli', 'version': '\u2265 3.4.0'},\n  {'name': 'glue', 'version': nan},\n  {'name': 'rlang', 'version': '\u2265 1.0.6'}],\n 'cli': [{'name': 'R', 'version': '\u2265 3.4'}, {'name': 'utils', 'version': nan}],\n 'munsell': [{'name': 'colorspace', 'version': nan},\n  {'name': 'methods', 'version': nan}],\n 'colorspace': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'methods', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'grDevices', 'version': nan},\n  {'name': 'stats', 'version': nan}],\n 'R6': [{'name': 'R', 'version': '\u2265 3.0'}],\n 'RColorBrewer': [{'name': 'R', 'version': '\u2265 2.0.0'}],\n 'viridisLite': [{'name': 'R', 'version': '\u2265 2.10'}],\n 'lmtest': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'zoo', 'version': nan},\n  {'name': 'graphics', 'version': nan}],\n 'zoo': [{'name': 'R', 'version': '\u2265 3.1.0'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'graphics', 'version': nan},\n  {'name': 'grDevices', 'version': nan},\n  {'name': 'lattice', 'version': '\u2265 0.20-27'}],\n 'sandwich': [{'name': 'R', 'version': '\u2265 3.0.0'},\n  {'name': 'stats', 'version': nan},\n  {'name': 'utils', 'version': nan},\n  {'name': 'zoo', 'version': nan}],\n 'Formula': [{'name': 'R', 'version': '\u2265 2.0.0'},\n  {'name': 'stats', 'version': nan}]}\n</code></pre>\n\n<h3 id=\"obtain-a-list-of-packages-data-2\">Obtain a list of packages data</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_csv</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;A3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;AER&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'A3',\n   'version': '1.0.0',\n   'url': 'https://cran.r-project.org/package=A3',\n   'dependencies': [{'name': 'R', 'version': '\u2265 2.15.0'},\n    {'name': 'xtable', 'version': nan},\n    {'name': 'pbapply', 'version': nan}]},\n  {'name': 'AER',\n   'version': '1.2-10',\n   'url': 'https://cran.r-project.org/package=AER',\n   'dependencies': [{'name': 'R', 'version': '\u2265 3.0.0'},\n    {'name': 'car', 'version': '\u2265 2.0-19'},\n    {'name': 'lmtest', 'version': nan},\n    {'name': 'sandwich', 'version': '\u2265 2.4-0'},\n    {'name': 'survival', 'version': '\u2265 2.37-5'},\n    {'name': 'zoo', 'version': nan},\n    {'name': 'stats', 'version': nan},\n    {'name': 'Formula', 'version': '\u2265 0.2-0'}]}],\n ['NON_EXISTING_PACKAGE'])\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bioconductor_csv</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"s1\">&#39;TDARACNE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ASICS&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>([{'name': 'TDARACNE',\n   'version': '1.47.0',\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/TDARACNE.html',\n   'dependencies': [{'name': 'GenKern', 'version': nan},\n    {'name': 'Rgraphviz', 'version': nan},\n    {'name': 'Biobase', 'version': nan}]},\n  {'name': 'ASICS',\n   'version': '2.14.0',\n   'url': 'https://www.bioconductor.org/packages/release/bioc/html/ASICS.html',\n   'dependencies': [{'name': 'R', 'version': '&gt;= 3.5'},\n    {'name': 'BiocParallel', 'version': nan},\n    {'name': 'ggplot2', 'version': nan},\n    {'name': 'glmnet', 'version': nan},\n    {'name': 'grDevices', 'version': nan},\n    {'name': 'gridExtra', 'version': nan},\n    {'name': 'methods', 'version': nan},\n    {'name': 'mvtnorm', 'version': nan},\n    {'name': 'PepsNMR', 'version': nan},\n    {'name': 'plyr', 'version': nan},\n    {'name': 'quadprog', 'version': nan},\n    {'name': 'ropls', 'version': nan},\n    {'name': 'stats', 'version': nan},\n    {'name': 'SummarizedExperiment', 'version': nan},\n    {'name': 'utils', 'version': nan},\n    {'name': 'Matrix', 'version': nan},\n    {'name': 'zoo', 'version': nan}]}],\n ['NON_EXISTING_PACKAGE'])\n</code></pre>\n\n<h2 id=\"web-api-based-librariesio-api\"><strong>Web API-Based (Libraries.io API)</strong></h2>\n\n<p>Based on the Web API of Libraries.io we can obtain data from this source.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>It is important to note that the data is not updated as a mandatory point to care about</p>\n\n</div>\n\n<h3 id=\"constructor-3\">Constructor</h3>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>In this case, it is necessary to define the <strong>libraries.io API key</strong> in the <code>config.ini</code> file</p>\n\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_libio</span> <span class=\"o\">=</span> <span class=\"n\">LibrariesioDataSource</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Name of the data source</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Description of the data source</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io datasource form Libraries.io api&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the platform</span>\n    <span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s2\">&quot;pypi&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">nuget_libio</span> <span class=\"o\">=</span> <span class=\"n\">LibrariesioDataSource</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Name of the data source</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Description of the data source</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io datasource form Libraries.io api&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the platform</span>\n    <span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s2\">&quot;nuget&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">cran_libio</span> <span class=\"o\">=</span> <span class=\"n\">LibrariesioDataSource</span><span class=\"p\">(</span>\n    <span class=\"c1\"># Name of the data source</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Description of the data source</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Libraries.io datasource form Libraries.io api&quot;</span><span class=\"p\">,</span>\n    <span class=\"c1\"># Name of the platform</span>\n    <span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s2\">&quot;cran&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"obtain-package-names-2\">Obtain package names</h3>\n\n<div class=\"pdoc-alert pdoc-alert-danger\">\n\n<p>This functionality has not been implemented because there is no way to get this data through the API</p>\n\n</div>\n\n<p>The library used to access API from Python has a search functionality but unfortunately it cannot be used efficiently for this task</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Set the apikey as an environment variable</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;LIBRARIES_API_KEY&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Configuration</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">(</span><span class=\"s2\">&quot;librariesio&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;api_key&quot;</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pybraries.search</span> <span class=\"kn\">import</span> <span class=\"n\">Search</span>\n\n<span class=\"n\">search</span> <span class=\"o\">=</span> <span class=\"n\">Search</span><span class=\"p\">()</span>\n<span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">project_search</span><span class=\"p\">(</span><span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s1\">&#39;pypi&#39;</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">project</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>A string of keywords must be passed as a keyword argument\ntypescript\n@types/node\neslint\nwebpack\nprettier\n@types/jest\n@types/react\n@babel/runtime\n@babel/preset-typescript\njest\nrxjs\npostcss\nvue-template-compiler\nvue\naxios\nrequests\nmoment\n@types/react-dom\n@types/mocha\nbabel-preset-react\n@babel/core\nbabel-runtime\nbabel-core\n@babel/preset-env\n@babel/plugin-proposal-class-properties\n@babel/plugin-transform-runtime\n@babel/preset-react\nbabel-jest\ngulp\ncommander\n</code></pre>\n\n<h3 id=\"obtain-package-data-3\">Obtain package data</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">disable_all_loggers</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pypi_libio</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;networkx&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'networkx',\n 'version': '3.1rc0',\n 'dependencies': [{'name': 'codecov', 'version': '2.1.13'},\n  {'name': 'pytest-cov', 'version': '4.0.0'},\n  {'name': 'pytest', 'version': '7.3.1'},\n  {'name': 'sympy', 'version': '1.11.1'},\n  {'name': 'pydot', 'version': '0.9.10'},\n  {'name': 'pygraphviz', 'version': '1.3.1'},\n  {'name': 'lxml', 'version': '4.9.2'},\n  {'name': 'texext', 'version': '0.6.7'},\n  {'name': 'nb2plots', 'version': '0.6.1'},\n  {'name': 'pillow', 'version': '9.5.0'},\n  {'name': 'numpydoc', 'version': '1.5.0'},\n  {'name': 'sphinx-gallery', 'version': '0.13.0'},\n  {'name': 'pydata-sphinx-theme', 'version': '0.13.3'},\n  {'name': 'sphinx', 'version': '7.0.0'},\n  {'name': 'mypy', 'version': '1.2.0'},\n  {'name': 'pre-commit', 'version': '3.2.2'},\n  {'name': 'pandas', 'version': '2.0.1'},\n  {'name': 'matplotlib', 'version': '3.7.1'},\n  {'name': 'scipy', 'version': '1.10.1'},\n  {'name': 'numpy', 'version': '1.24.2'}],\n 'url': 'https://pypi.org/project/networkx/'}\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">nuget_libio</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;Microsoft.Extensions.DependencyInjection&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>{'name': 'Microsoft.Extensions.DependencyInjection',\n 'version': '8.0.0-preview.3.23174.8',\n 'dependencies': [{'name': 'System.Threading.Tasks.Extensions',\n   'version': '4.5.4'},\n  {'name': 'Microsoft.Extensions.DependencyInjection.Abstractions',\n   'version': '3.1.32'},\n  {'name': 'Microsoft.Bcl.AsyncInterfaces', 'version': '7.0.0'}],\n 'url': 'https://www.nuget.org/packages/Microsoft.Extensions.DependencyInjection/'}\n</code></pre>\n\n<h3 id=\"obtain-a-list-of-packages-data-3\">Obtain a list of packages data</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">cran_libio</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;A3&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;AER&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NON_EXISTING_PACKAGE&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>[{'name': 'A3',\n  'version': '1.0.0',\n  'dependencies': [{'name': 'R', 'version': None},\n   {'name': 'randomForest', 'version': None}],\n  'url': 'https://cran.r-project.org/package=A3'},\n {'name': 'AER',\n  'version': '1.2-9',\n  'dependencies': [{'name': 'vars', 'version': '0.5.3'},\n   {'name': 'urca', 'version': None},\n   {'name': 'tseries', 'version': None},\n   {'name': 'truncreg', 'version': None},\n   {'name': 'systemfit', 'version': None},\n   {'name': 'strucchange', 'version': None},\n   {'name': 'scatterplot3d', 'version': '0.3.4'},\n   {'name': 'sampleSelection', 'version': None},\n   {'name': 'rugarch', 'version': None},\n   {'name': 'ROCR', 'version': None},\n   {'name': 'rgl', 'version': '0.109.2'},\n   {'name': 'quantreg', 'version': '5.42.1'},\n   {'name': 'pscl', 'version': '1.5.5'},\n   {'name': 'plm', 'version': None},\n   {'name': 'np', 'version': None},\n   {'name': 'nnet', 'version': None},\n   {'name': 'nlme', 'version': None},\n   {'name': 'mlogit', 'version': None},\n   {'name': 'MASS', 'version': None},\n   {'name': 'longmemo', 'version': None},\n   {'name': 'lattice', 'version': None},\n   {'name': 'KernSmooth', 'version': None},\n   {'name': 'ineq', 'version': None},\n   {'name': 'foreign', 'version': None},\n   {'name': 'forecast', 'version': '8.17.0'},\n   {'name': 'fGarch', 'version': '3042.83.2'},\n   {'name': 'effects', 'version': None},\n   {'name': 'dynlm', 'version': None},\n   {'name': 'boot', 'version': None},\n   {'name': 'Formula', 'version': None},\n   {'name': 'stats', 'version': None},\n   {'name': 'zoo', 'version': None},\n   {'name': 'survival', 'version': None},\n   {'name': 'sandwich', 'version': None},\n   {'name': 'lmtest', 'version': None},\n   {'name': 'car', 'version': None},\n   {'name': 'R', 'version': None}],\n  'url': 'https://cran.r-project.org/package=AER'}]\n</code></pre>\n"}, {"fullname": "olivia_finder.data_source.csv_ds", "modulename": "olivia_finder.data_source.csv_ds", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.data_source.csv_ds.CSVDataSource", "modulename": "olivia_finder.data_source.csv_ds", "qualname": "CSVDataSource", "kind": "class", "doc": "<p>Class that implements the methods for loading a network from a CSV file.\nImplements the <strong>DataSource</strong> abstract class.</p>\n", "bases": "olivia_finder.data_source.data_source.DataSource"}, {"fullname": "olivia_finder.data_source.csv_ds.CSVDataSource.__init__", "modulename": "olivia_finder.data_source.csv_ds", "qualname": "CSVDataSource.__init__", "kind": "function", "doc": "<p>Constructor of the class</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\nThe path to the CSV file</li>\n<li><strong>name</strong> (str, optional):\nThe name of the data source, by default None</li>\n<li><strong>description</strong> (str, optional):\nThe description of the data source, by default None</li>\n<li><strong>dependent_field</strong> (str, optional):\nThe name of the field that contains the dependent packages, by default None</li>\n<li><strong>dependency_field</strong> (str, optional):\nThe name of the field that contains the dependency packages, by default None</li>\n<li><strong>dependent_version_field</strong> (str, optional):\nThe name of the field that contains the dependent packages versions, by default None</li>\n<li><strong>dependency_version_field</strong> (str, optional):\nThe name of the field that contains the dependency packages versions, by default None</li>\n<li><strong>dependent_url_field</strong> (str, optional):\nThe name of the field that contains the dependent packages urls, by default None</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the file path is None, If the file is not a CSV file, If the dependent field is None,</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependent_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependency_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependent_version_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependency_version_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependent_url_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.csv_ds.CSVDataSource.obtain_package_names", "modulename": "olivia_finder.data_source.csv_ds", "qualname": "CSVDataSource.obtain_package_names", "kind": "function", "doc": "<p>Obtains the list of packages from the data source, sorted alphabetically.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: The list of package names in the data source</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">CSVDataSource</span><span class=\"p\">(</span><span class=\"s2\">&quot;test.csv&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dependency&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()</span>\n<span class=\"go\">[&quot;package1&quot;, &quot;package2&quot;, &quot;package3&quot;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.csv_ds.CSVDataSource.obtain_package_data", "modulename": "olivia_finder.data_source.csv_ds", "qualname": "CSVDataSource.obtain_package_data", "kind": "function", "doc": "<p>Obtains the package from the dataframe</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nThe name of the package</li>\n<li><strong>override_previous</strong> (bool):\nIf True, it will override the previous data with the same name but different version</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: The data of the package in the form of a dictionary</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">CSVDataSource</span><span class=\"p\">(</span><span class=\"s2\">&quot;test.csv&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dependency&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s2\">&quot;package1&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">{</span>\n<span class=\"go\">    &quot;name&quot;: &quot;package1&quot;,</span>\n<span class=\"go\">    &quot;version&quot;: &quot;1.0.0&quot;,</span>\n<span class=\"go\">    &quot;url&quot;: &quot;</span>\n<span class=\"go\">    &quot;dependencies&quot;: [</span>\n<span class=\"go\">        {</span>\n<span class=\"go\">            &quot;name&quot;: &quot;package2&quot;,</span>\n<span class=\"go\">            &quot;version&quot;: &quot;1.0.0&quot;</span>\n<span class=\"go\">        },</span>\n<span class=\"go\">    ]</span>\n<span class=\"go\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">override_previous</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.csv_ds.CSVDataSource.obtain_packages_data", "modulename": "olivia_finder.data_source.csv_ds", "qualname": "CSVDataSource.obtain_packages_data", "kind": "function", "doc": "<p>Obtains the data of a list of package names from the CSV file\nIf the package name list is None, it will obtain the package names from the CSV file and load their data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_names</strong> (list[str]):\nThe list of package names to obtain the data from</li>\n<li><strong>progress_bar</strong> (tqdm.tqdm):\nThe progress bar to update</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tuple[list[dict], list[str]]</strong>: The list of packages data and the list of not found packages</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">CSVDataSource</span><span class=\"p\">(</span><span class=\"s2\">&quot;test.csv&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dependency&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s2\">&quot;package1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;package2&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">(</span>\n<span class=\"go\">    [</span>\n<span class=\"go\">        {</span>\n<span class=\"go\">            &quot;name&quot;: &quot;package1&quot;,</span>\n<span class=\"go\">            &quot;version&quot;: &quot;1.0.0&quot;,</span>\n<span class=\"go\">            &quot;url&quot;: &quot;</span>\n<span class=\"go\">            &quot;dependencies&quot;: [ ... ]</span>\n<span class=\"go\">        },</span>\n<span class=\"go\">        {</span>\n<span class=\"go\">            &quot;name&quot;: &quot;package2&quot;,</span>\n<span class=\"go\">            &quot;version&quot;: &quot;1.0.0&quot;,</span>\n<span class=\"go\">            &quot;url&quot;: &quot;</span>\n<span class=\"go\">            &quot;dependencies&quot;: [ ... ]</span>\n<span class=\"go\">        }</span>\n<span class=\"go\">    ],</span>\n<span class=\"go\">    []</span>\n<span class=\"go\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"n\">tqdm</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">tqdm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.data_source", "modulename": "olivia_finder.data_source.data_source", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.data_source.data_source.DataSource", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource", "kind": "class", "doc": "<p>Base class for data sources.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>This class is an abstract class, so it can't be instantiated.</p>\n\n</div>\n\n<p>The subclasses must implement the methods:</p>\n\n<ul>\n<li><code>DataSource.obtain_package_names</code></li>\n<li><code>DataSource.obtain_package_data</code></li>\n<li><code>DataSource.obtain_packages_data</code></li>\n</ul>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>The <code>name</code> and <code>description</code> parameters are mandatory, and must be passed as arguments.\nThe use of this parameters is to be able to identify the data source, and to be able to show a description of it.</p>\n\n</div>\n", "bases": "abc.ABC"}, {"fullname": "olivia_finder.data_source.data_source.DataSource.__init__", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource.__init__", "kind": "function", "doc": "<p>Constructor of the DataSource class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the data source</li>\n<li><strong>description</strong> (str):\nThe description of the data source</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.data_source.DataSource.get_info", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource.get_info", "kind": "function", "doc": "<p>Returns the datasource information data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: The information of the data source</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">DataSource</span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">get_info</span><span class=\"p\">()</span>\n<span class=\"go\">{&#39;name&#39;: &#39;name&#39;, &#39;description&#39;: &#39;description&#39;}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.data_source.DataSource.obtain_package_names", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource.obtain_package_names", "kind": "function", "doc": "<p>Obtains the list of packages from the data source.</p>\n\n<p>Is an optional method, if the data source does not implement it, it will\nbe considered that it does not have a list of packages available.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>NotImplementedError</strong>: Because this method is not implemented in the base class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.data_source.DataSource.obtain_package_data", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource.obtain_package_data", "kind": "function", "doc": "<p>Obtains the data of a package from the data source as a dictionary.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nThe name of the package to obtain the data</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>NotImplementedError</strong>: Because this method is not implemented in the base class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.data_source.DataSource.obtain_packages_data", "modulename": "olivia_finder.data_source.data_source", "qualname": "DataSource.obtain_packages_data", "kind": "function", "doc": "<p>Obtains the data of a list of package names from the data source.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>NotImplementedError</strong>: Because this method is not implemented in the base class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.data_source.NotFoundInDataSourceException", "modulename": "olivia_finder.data_source.data_source", "qualname": "NotFoundInDataSourceException", "kind": "class", "doc": "<p>Exception that is raised when a package is not found in a data source.</p>\n", "bases": "builtins.Exception"}, {"fullname": "olivia_finder.data_source.data_source.NotFoundInDataSourceException.__init__", "modulename": "olivia_finder.data_source.data_source", "qualname": "NotFoundInDataSourceException.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">data_source_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.librariesio_ds", "modulename": "olivia_finder.data_source.librariesio_ds", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesioDataSource", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesioDataSource", "kind": "class", "doc": "<p>Data source for the Libraries.io API</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<ul>\n<li>The API key must be set as an environment variable with the name <code>LIBRARIES_API_KEY</code></li>\n<li>The class will raise an exception if the API key is not found</li>\n<li>The API key can be set in the configuration file</li>\n<li>The API key can be obtained from the user's profile in Libraries.io</li>\n</ul>\n\n</div>\n", "bases": "olivia_finder.data_source.data_source.DataSource"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesioDataSource.__init__", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesioDataSource.__init__", "kind": "function", "doc": "<p>Constructor of the class</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the data source</li>\n<li><strong>description</strong> (str):\nDescription of the data source</li>\n<li><strong>platform</strong> (str):\nPlatform of the data source to search for packages</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>LibrariesIoException</strong>: If the search object cannot be created</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">platform</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesioDataSource.obtain_package_names", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesioDataSource.obtain_package_names", "kind": "function", "doc": "<p>Obtains the list of packages from the data source.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesioDataSource.obtain_package_data", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesioDataSource.obtain_package_data", "kind": "function", "doc": "<p>Obtains the data of a package from the data source.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nName of the package</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: Dictionary with the package data</li>\n<li><strong>None</strong>: If the package is not found</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">LibrariesioDataSource</span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;platform&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">obtain_package_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;package_name&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;name&#39;: &#39;package_name&#39;, &#39;version&#39;: &#39;1.0.0&#39;, &#39;dependencies&#39;: [&#39;package1&#39;, &#39;package2&#39;], &#39;url&#39;: &#39;www.example.com&#39;}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesioDataSource.obtain_packages_data", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesioDataSource.obtain_packages_data", "kind": "function", "doc": "<p>Obtains the data of a list of package names from the data source.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[dict]</strong>: The data of the packages as a list of dictionaries</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span> <span class=\"o\">=</span> <span class=\"n\">LibrariesioDataSource</span><span class=\"p\">(</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;platform&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;package1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;package2&#39;</span><span class=\"p\">])</span>\n<span class=\"go\">[{&#39;name&#39;: &#39;package1&#39;, &#39;version&#39;: &#39;1.0.0&#39;, &#39;dependencies&#39;: [&#39;package1&#39;, &#39;package2&#39;], &#39;url&#39;: &#39;www.example.com&#39;}, </span>\n<span class=\"go\">{&#39;name&#39;: &#39;package2&#39;, &#39;version&#39;: &#39;1.0.0&#39;, &#39;dependencies&#39;: [&#39;package1&#39;, &#39;package2&#39;], &#39;url&#39;: &#39;www.example.com&#39;}]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.librariesio_ds.LibrariesIoException", "modulename": "olivia_finder.data_source.librariesio_ds", "qualname": "LibrariesIoException", "kind": "class", "doc": "<p>Exception for the LibrariesioDataSource class</p>\n", "bases": "olivia_finder.utilities.exception.OliviaFinderException"}, {"fullname": "olivia_finder.data_source.repository_scrapers", "modulename": "olivia_finder.data_source.repository_scrapers", "kind": "module", "doc": "<p>Module that contains the custom implementation of the Scraper class for a set of package managers</p>\n\n<p>The included package managers are:</p>\n\n<h2 id=\"npm\"><strong>NPM</strong></h2>\n\n<p>(Node Package Manager from <a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a>)\n<code>olivia_finder.data_source.repository_scrapers.npm.NpmScraper</code></p>\n\n<h2 id=\"pypi\"><strong>PyPI</strong></h2>\n\n<p>(Python Package Index from <a href=\"https://pypi.org/\">https://pypi.org/</a>)\n<code>olivia_finder.data_source.repository_scrapers.pypi.PypiScraper</code></p>\n\n<h2 id=\"cran\"><strong>CRAN</strong></h2>\n\n<p>(Comprehensive R Archive Network from <a href=\"https://cran.r-project.org/\">https://cran.r-project.org/</a>)\n<code>olivia_finder.data_source.repository_scrapers.cran.CranScraper</code></p>\n\n<h2 id=\"bioconductor\"><strong>Bioconductor</strong></h2>\n\n<p>(Bioconductor from <a href=\"https://www.bioconductor.org/\">https://www.bioconductor.org/</a>)\n<code>olivia_finder.data_source.repository_scrapers.bioconductor.BioconductorScraper</code></p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.bioconductor", "modulename": "olivia_finder.data_source.repository_scrapers.bioconductor", "kind": "module", "doc": "<h1 id=\"bioconductorpy\">bioconductor.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains ...</p>\n\n<p>File information:\n    - File: bioconductor.py\n    - Project: scrapers\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.bioconductor.BioconductorScraper", "modulename": "olivia_finder.data_source.repository_scrapers.bioconductor", "qualname": "BioconductorScraper", "kind": "class", "doc": "<p>Class to scrape data from Bioconductor packages</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str = None):\nName of the data source</li>\n<li><strong>description</strong> (str = None):\nDescription of the data source</li>\n<li><strong>auxiliary_datasources</strong> (Optional[list[DataSource]]):\nList of auxiliary data sources</li>\n<li><strong>request_handler</strong> (RequestHandler = None):\nRequest handler for the scraper, if None, it will be initialized with a generic RequestHandler</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>NAME</strong> (str):\nThe name of the data source</li>\n<li><strong>DESCRIPTION</strong> (str):\nThe description of the data source</li>\n<li><strong>BIOCONDUCTOR_LIST_URL</strong> (str):\nThe URL of the page with the list of Bioconductor packages</li>\n<li><strong>BIOCONDUCTOR_PACKAGE_DATA_URL</strong> (str):\nThe URL of the page with the data of each Bioconductor package</li>\n</ul>\n", "bases": "olivia_finder.data_source.scraper_ds.ScraperDataSource"}, {"fullname": "olivia_finder.data_source.repository_scrapers.bioconductor.BioconductorScraper.__init__", "modulename": "olivia_finder.data_source.repository_scrapers.bioconductor", "qualname": "BioconductorScraper.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">request_handler</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">request_handler</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.repository_scrapers.bioconductor.BioconductorScraper.obtain_package_names", "modulename": "olivia_finder.data_source.repository_scrapers.bioconductor", "qualname": "BioconductorScraper.obtain_package_names", "kind": "function", "doc": "<p>Get the list of packages from the Bioconductor website\nTODO: FIX THIS METHOD, IT REQUIRES FIREFOX INSTALLED IN THE SYSTEM and it can be fixed </p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: List of package names</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ScraperError</strong>: If the list of packages cannot be obtained</li>\n</ul>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scraper</span> <span class=\"o\">=</span> <span class=\"n\">BiocScraper</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package_names</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.repository_scrapers.cran", "modulename": "olivia_finder.data_source.repository_scrapers.cran", "kind": "module", "doc": "<h1 id=\"cranpy\">cran.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains ...</p>\n\n<p>File information:\n    - File: cran.py\n    - Project: scrapers\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.cran.CranScraper", "modulename": "olivia_finder.data_source.repository_scrapers.cran", "qualname": "CranScraper", "kind": "class", "doc": "<p>Class that scrapes the CRAN website to obtain information about R packages.\nImplements the abstract methods of the ScraperDataSource class.</p>\n\n<p>As the CRAN repository can contain packages who depend on Bioconductor packages, this class also can\nobtain the list of Bioconductor packages from the Bioconductor website and merge it with the CRAN packages.\nThis functionality is implemented in the method obtain_package_data() and it is optional.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str = None):\nName of the data source</li>\n<li><strong>description</strong> (str = None):\nDescription of the data source</li>\n<li><strong>auxiliary_datasources</strong> (Optional[list[DataSource]]):\nList of auxiliary data sources that can be used to obtain information about packages</li>\n<li><strong>request_handler</strong> (RequestHandler = None):\nRequest handler for the scraper, if None, it will be initialized with a generic RequestHandler</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>CRAN_PACKAGE_LIST_URL</strong> (str):\nURL of the CRAN website where the list of packages is located</li>\n<li><strong>CRAN_PACKAGE_DATA_URL</strong> (str):\nURL of the CRAN website where the data of a package is located</li>\n<li><strong>NAME</strong> (str):\nName of the scraper</li>\n<li><strong>DESCRIPTION</strong> (str):\nDescription of the scraper</li>\n</ul>\n", "bases": "olivia_finder.data_source.scraper_ds.ScraperDataSource"}, {"fullname": "olivia_finder.data_source.repository_scrapers.cran.CranScraper.__init__", "modulename": "olivia_finder.data_source.repository_scrapers.cran", "qualname": "CranScraper.__init__", "kind": "function", "doc": "<p>Constructor of the class</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">request_handler</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">request_handler</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.repository_scrapers.cran.CranScraper.obtain_package_names", "modulename": "olivia_finder.data_source.repository_scrapers.cran", "qualname": "CranScraper.obtain_package_names", "kind": "function", "doc": "<p>Get the list of packages in the CRAN website, by scraping the HTML of the page</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: List of packages</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.scraping.cran</span> <span class=\"kn\">import</span> <span class=\"n\">CranScraper</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">CranScraper</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package_names</span> <span class=\"o\">=</span> <span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.repository_scrapers.npm", "modulename": "olivia_finder.data_source.repository_scrapers.npm", "kind": "module", "doc": "<h1 id=\"npmpy\">npm.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains ...</p>\n\n<p>File information:\n    - File: npm.py\n    - Project: scrapers\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.npm.NpmScraper", "modulename": "olivia_finder.data_source.repository_scrapers.npm", "qualname": "NpmScraper", "kind": "class", "doc": "<p>Class that scrapes the NPM website to obtain information about JavaScript packages</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>NPM_PACKAGE_REGISTRY_URL</strong> (str):\nURL of the page that contains the list of packages</li>\n<li><strong>NPM_PACKAGE_LIST_URL</strong> (str):\nURL of the page that contains the data of a package</li>\n<li><strong>NPM_REPO_URL</strong> (str):\nURL of the page that contains the data of a package</li>\n<li><strong>NAME</strong> (str):\nName of the data source</li>\n<li><strong>DESCRIPTION</strong> (str):\nDescription of the data source</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str = None):\nName of the scraper</li>\n<li><strong>description</strong> (str = None):\nDescription of the scraper</li>\n<li><strong>request_handler</strong> (RequestHandler = None):\nRequest handler for the scraper, if None, it will be initialized with a generic RequestHandler</li>\n</ul>\n", "bases": "olivia_finder.data_source.scraper_ds.ScraperDataSource"}, {"fullname": "olivia_finder.data_source.repository_scrapers.npm.NpmScraper.__init__", "modulename": "olivia_finder.data_source.repository_scrapers.npm", "qualname": "NpmScraper.__init__", "kind": "function", "doc": "<p>Constructor of the class</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">request_handler</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">request_handler</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NPM Scraper&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Scraper class implementation for the NPM package manager.&#39;</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.repository_scrapers.npm.NpmScraper.chunks_folder", "modulename": "olivia_finder.data_source.repository_scrapers.npm", "qualname": "NpmScraper.chunks_folder", "kind": "variable", "doc": "<p>Folder where the chunks will be saved, \nThis is because the NPM registry is too big to be downloaded in one go</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.npm.NpmScraper.obtain_package_names", "modulename": "olivia_finder.data_source.repository_scrapers.npm", "qualname": "NpmScraper.obtain_package_names", "kind": "function", "doc": "<p>Function to obtain the names of the packages in the NPM repository</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>page_size</strong> (int = 100):\nNumber of packages to be requested in each page</li>\n<li><strong>show_progress_bar</strong> (bool = True):\nFlag to show the progress bar</li>\n<li><strong>save_chunks</strong> (bool = False):\nFlag to save the chunks of the registry in the chunks folder</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[dict]</strong>: List of dictionaries with the name and version of the packages</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scraper</span> <span class=\"o\">=</span> <span class=\"n\">NpmScraper</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">show_progress_bar</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">save_chunks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.repository_scrapers.pypi", "modulename": "olivia_finder.data_source.repository_scrapers.pypi", "kind": "module", "doc": "<h1 id=\"pypipy\">pypi.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains ...</p>\n\n<p>File information:\n    - File: pypi.py\n    - Project: scrapers\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.pypi.PypiScraper", "modulename": "olivia_finder.data_source.repository_scrapers.pypi", "qualname": "PypiScraper", "kind": "class", "doc": "<p>Class that scrapes the PyPI website to obtain information about Python packages\nImplements the abstract class Scraper and accordingly DataSource class</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>NAME</strong> (str):\nName of the scraper</li>\n<li><strong>DESCRIPTION</strong> (str):\nDescription of the scraper</li>\n<li><strong>PYPI_PACKAGE_LIST_URL</strong> (str):\nURL of the PyPI website where the list of packages is located</li>\n<li><strong>PYPI_PACKAGE_DATA_URL</strong> (str):\nURL of the PyPI website where the data of a package is located</li>\n</ul>\n", "bases": "olivia_finder.data_source.scraper_ds.ScraperDataSource"}, {"fullname": "olivia_finder.data_source.repository_scrapers.pypi.PypiScraper.__init__", "modulename": "olivia_finder.data_source.repository_scrapers.pypi", "qualname": "PypiScraper.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;PyPI Scraper&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Scraper class implementation for the PyPI package network.&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">request_handler</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">request_handler</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.repository_scrapers.pypi.PypiScraper.obtain_package_names", "modulename": "olivia_finder.data_source.repository_scrapers.pypi", "qualname": "PypiScraper.obtain_package_names", "kind": "function", "doc": "<p>Obtain the list of packages names from the PyPI website\nImplements the abstract method of DataSource class</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: List of packages names</li>\n</ul>\n\n<h6 id=\"handles\">Handles</h6>\n\n<p>Exception\n    If there is an error obtaining the list of packages, it returns an empty list</p>\n\n<h6 id=\"example\">Example</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pypi_scraper</span> <span class=\"o\">=</span> <span class=\"n\">PypiScraper</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pypi_scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_package_names</span><span class=\"p\">()</span>\n<span class=\"go\">[&#39;package1&#39;, &#39;package2&#39;, ...]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.repository_scrapers.r", "modulename": "olivia_finder.data_source.repository_scrapers.r", "kind": "module", "doc": "<h1 id=\"rpy\">r.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains the common functions for scraping R packages, such as parsing the dependencies string\nIt's used by the CRAN and Bioconductor scrapers</p>\n\n<p>File information:\n    - File: r.py\n    - Project: scrapers\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.repository_scrapers.r.parse_dependencies", "modulename": "olivia_finder.data_source.repository_scrapers.r", "qualname": "parse_dependencies", "kind": "function", "doc": "<p>Parses the dependencies string and returns a list of dictionaries with the name and version of each dependency\nTODO: A fix is needed to target the version of the dependency, as it's not always well defined</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dependencies_str</strong> (str):\nThe dependencies string</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[dict[str, str]]</strong>: A list of dictionaries with the name and version of each dependency</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dependencies_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.scraper_ds", "modulename": "olivia_finder.data_source.scraper_ds", "kind": "module", "doc": "<h1 id=\"scraper_dspy\">scraper_ds.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains ...</p>\n\n<p>File information:\n    - File: scraper.py\n    - Project: data_source\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperDataSource", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperDataSource", "kind": "class", "doc": "<p>Base class for custom scraping implementations of software repositories as CRAN, PyPI, etc.\nThis class is an abstract class, so it cannot be instantiated.\nThe subclasses must implement the abstract methods.\nThis class is a subclass of the DataSource class.\nThis class implements the methods _build_urls, obtain_package_data and obtain_packages_data</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the data source</li>\n<li><strong>description</strong> (str):\nDescription of the data source</li>\n<li><strong>request_handler</strong> (RequestHandler):\nRequest handler for making the requests</li>\n<li><strong>not_found</strong> (list[str]):\nList of packages not found</li>\n</ul>\n", "bases": "olivia_finder.data_source.data_source.DataSource, abc.ABC"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperDataSource.__init__", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperDataSource.__init__", "kind": "function", "doc": "<p>Constructor of the class</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str, optional):\nName of the data source, by default None</li>\n<li><strong>description</strong> (str, optional):\nDescription of the data source, by default None</li>\n<li><strong>request_handler</strong> (RequestHandler, optional):\nRequest handler for making the requests, by default None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">request_handler</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">request_handler</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperDataSource.obtain_packages_data", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperDataSource.obtain_packages_data", "kind": "function", "doc": "<p>Scrape a list of packages from a package manager, if the package is not found, it is added to the not_found list\nOverrides the method of the DataSource class</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_names</strong> (list[str], optional):\nList of package names to scrape, by default None</li>\n<li><strong>progress_bar</strong> (tqdm.tqdm, optional):\nProgress bar for visualizing the progress, by default None</li>\n<li><strong>full_scrape</strong> (bool, optional):\nIf True, it tries to scrape all the packages obtainig the package names from the data source, by default False\nOnly works if package_names is None</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ScraperError</strong>: If the list of package names is None or empty and full_scrape is disabled</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Tuple[list[dict], list[str]]</strong>: Tuple with the list of packages data and the list of packages not found</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scraper</span> <span class=\"o\">=</span> <span class=\"n\">Scraper</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">obtain_packages_data</span><span class=\"p\">([</span><span class=\"s1\">&#39;numpy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pandas&#39;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"n\">tqdm</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">tqdm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperDataSource.obtain_package_data", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperDataSource.obtain_package_data", "kind": "function", "doc": "<p>Obtain the data of a package from the web page of the package manager</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nName of the package to be scraped</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: dictionary with the data of the package</li>\n<li><strong>None</strong>: If the package is not found</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperDataSource.obtain_package_names", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperDataSource.obtain_package_names", "kind": "function", "doc": "<p>Obtain the package names from the web page of the package manager\nit must handle exceptions and return an empty list if the package names cannot be obtained\nTo be implemented by the child class</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>NotImplementedError</strong>: Bcause the method is not implemented in the base class</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.data_source.scraper_ds.ScraperError", "modulename": "olivia_finder.data_source.scraper_ds", "qualname": "ScraperError", "kind": "class", "doc": "<p>Exception raised when an error occurs while scraping</p>\n", "bases": "olivia_finder.utilities.exception.OliviaFinderException"}, {"fullname": "olivia_finder.myrequests", "modulename": "olivia_finder.myrequests", "kind": "module", "doc": "<h2 id=\"description\"><strong>Description</strong></h2>\n\n<p>The MyRequest subpackage is designed to obtain data repetitively from a web server</p>\n\n<p>It is able to perform requests with thread parallelism</p>\n\n<h2 id=\"package-structure\"><strong>Package structure</strong></h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>\u251c\u2500\u2500<span class=\"w\"> </span>data\n\u2502<span class=\"w\">   </span>\u2514\u2500\u2500<span class=\"w\"> </span>useragents.txt\n\u251c\u2500\u2500<span class=\"w\"> </span>__init__.py\n\u251c\u2500\u2500<span class=\"w\"> </span>job.py\n\u251c\u2500\u2500<span class=\"w\"> </span>proxy_builders\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500<span class=\"w\"> </span>__init__.py\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500<span class=\"w\"> </span>list_builder.py\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500<span class=\"w\"> </span>proxy_builder.py\n\u2502<span class=\"w\">   </span>\u2514\u2500\u2500<span class=\"w\"> </span>ssl_proxies.py\n\u251c\u2500\u2500<span class=\"w\"> </span>proxy_handler.py\n\u251c\u2500\u2500<span class=\"w\"> </span>request_handler.py\n\u251c\u2500\u2500<span class=\"w\"> </span>request_worker.py\n\u2514\u2500\u2500<span class=\"w\"> </span>useragent_handler.py\n</code></pre>\n</div>\n\n<h2 id=\"package-modules\"><strong>Package modules</strong></h2>\n\n<ul>\n<li><p><strong>olivia_finder.myrequests.job</strong></p>\n\n<p>It represents a web request work, implements Thread</p></li>\n<li><p><strong>olivia_finder.myrequests.proxy_builders.proxy_builder</strong></p>\n\n<p>It contains the ProxyBuilder class, used to request proxies from web services</p></li>\n<li><p><strong>olivia_finder.myrequests.proxy_handler</strong></p>\n\n<p>It contains the ProxyHandler class, used by the <strong>RequestHandler</strong> object to obtain a fresh proxy (Singleton)</p></li>\n<li><p><strong>olivia_finder.myrequests.useragent_handler</strong></p>\n\n<p>It contains the UserAgentHandler class, used by the <strong>RequestHandler</strong> object to obtain a fresh user agent (Singleton)</p></li>\n<li><p><strong>olivia_finder.myrequests.request_handler</strong></p>\n\n<p>It contains the <strong>RequestHandler</strong> class, from which we can perform the corresponding works</p></li>\n</ul>\n\n<h2 id=\"class-proxybuilder-and-subclasses\"><strong>Class ProxyBuilder and subclasses</strong></h2>\n\n<p>You have the functionality of obtaining a list of internet proxys from some more or less stable data source</p>\n\n<p>ProxyBuilder It is an abstract class and should not be used directly, Its use is made through its subclasses</p>\n\n<p>We can focus on two different ways:</p>\n\n<ul>\n<li><p>Obtain the data through Web Scraping from some website that provides updated proxys</p></li>\n<li><p>Obtain the data from a proxies list in format <code>&lt;IP&gt;:&lt;PORT&gt;</code> from a web server</p></li>\n</ul>\n\n<p>This is shown below</p>\n\n<p><strong>Web scraping implementation (from sslproxies.org)</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pb_SSLProxies</span> <span class=\"o\">=</span> <span class=\"n\">SSLProxiesBuilder</span><span class=\"p\">()</span>\n<span class=\"n\">pb_SSLProxies</span><span class=\"o\">.</span><span class=\"n\">get_proxies</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<pre><code>['35.247.245.218:3129',\n '164.90.253.93:3128',\n '190.61.88.147:8080',\n '152.67.10.190:8100',\n '113.53.231.133:3129',\n '115.144.101.201:10001',\n '207.38.87.110:30114',\n '43.156.100.152:80',\n ...\n '93.91.112.247:41258',\n '103.180.59.220:8080']\n</code></pre>\n\n<p><strong>Web list implementation (from lists)</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">pb_ListBuilder</span> <span class=\"o\">=</span> <span class=\"n\">ListProxyBuilder</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://raw.githubusercontent.com/mertguvencli/http-proxy-list/main/proxy-list/data.txt&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">pb_ListBuilder</span><span class=\"o\">.</span><span class=\"n\">get_proxies</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<pre><code>['20.241.236.196:3128',\n '3.8.144.154:3128',\n '34.94.3.209:8585',\n '20.99.187.69:8443',\n '35.181.54.72:3128',\n ...\n '103.75.117.21:4443',\n '193.138.178.6:8282',\n '84.255.35.210:9898',\n '160.242.19.126:8080',\n '167.114.19.195:8050',\n '213.233.177.180:3000',\n '188.166.247.215:5000',\n '103.146.222.2:83',\n '188.132.222.198:8080',\n '217.21.214.139:8080',\n '85.173.165.36:46330',\n '179.63.149.2:999',\n '182.253.79.20:8080',\n '200.106.184.97:999']\n</code></pre>\n\n<h3 id=\"class-proxyhandler\"><strong>Class ProxyHandler</strong></h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">ph</span> <span class=\"o\">=</span> <span class=\"n\">ProxyHandler</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h3 id=\"class-useragenthandler\"><strong>Class UserAgentHandler</strong></h3>\n\n<p>The purpose of this class is to provide a set of useragents to be used by the <strong>RequestHandler</strong> object with the aim of hiding the original identity of the web request</p>\n\n<p>The class is prepared to load the useragents from a text file contained in the package, and in turn can obtain them from a website dedicated to provide them.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>If both options are not available, there will be used the default ones hardcoded in the class</p>\n\n</div>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Useragents dataset included on the package <strong>MyRequests</strong></p>\n\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;$<span class=\"w\"> </span>tail<span class=\"w\"> </span>../olivia_finder/myrequests/data/useragents.txt\n\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Windows<span class=\"w\"> </span>NT<span class=\"w\"> </span><span class=\"m\">6</span>.1<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>Chrome/40.0.2214.91<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>iPad<span class=\"p\">;</span><span class=\"w\"> </span>U<span class=\"p\">;</span><span class=\"w\"> </span>CPU<span class=\"w\"> </span>OS<span class=\"w\"> </span>5_0<span class=\"w\"> </span>like<span class=\"w\"> </span>Mac<span class=\"w\"> </span>OS<span class=\"w\"> </span>X<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/534.46<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>Version/5.1<span class=\"w\"> </span>Mobile/9A334<span class=\"w\"> </span>Safari/7534.48.3\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Windows<span class=\"w\"> </span>NT<span class=\"w\"> </span><span class=\"m\">5</span>.1<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>Chrome/42.0.2311.135<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Macintosh<span class=\"p\">;</span><span class=\"w\"> </span>Intel<span class=\"w\"> </span>Mac<span class=\"w\"> </span>OS<span class=\"w\"> </span>X<span class=\"w\"> </span>10_10_2<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>Chrome/43.0.2357.130<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Windows<span class=\"w\"> </span>NT<span class=\"w\"> </span><span class=\"m\">6</span>.1<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>coc_coc_browser/50.0.125<span class=\"w\"> </span>Chrome/44.0.2403.125<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>compatible<span class=\"p\">;</span><span class=\"w\"> </span>MSIE<span class=\"w\"> </span><span class=\"m\">10</span>.0<span class=\"p\">;</span><span class=\"w\"> </span>Windows<span class=\"w\"> </span>NT<span class=\"w\"> </span><span class=\"m\">6</span>.1<span class=\"p\">;</span><span class=\"w\"> </span>WOW64<span class=\"p\">;</span><span class=\"w\"> </span>Trident/6.0<span class=\"p\">;</span><span class=\"w\"> </span>SLCC2<span class=\"p\">;</span><span class=\"w\"> </span>.NET<span class=\"w\"> </span>CLR<span class=\"w\"> </span><span class=\"m\">2</span>.0.50727<span class=\"p\">;</span><span class=\"w\"> </span>.NET4.0C<span class=\"p\">;</span><span class=\"w\"> </span>.NET4.0E<span class=\"o\">)</span>\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Macintosh<span class=\"p\">;</span><span class=\"w\"> </span>Intel<span class=\"w\"> </span>Mac<span class=\"w\"> </span>OS<span class=\"w\"> </span>X<span class=\"w\"> </span>10_10_5<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>Chrome/43.0.2357.124<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Windows<span class=\"w\"> </span>NT<span class=\"w\"> </span><span class=\"m\">6</span>.3<span class=\"p\">;</span><span class=\"w\"> </span>Win64<span class=\"p\">;</span><span class=\"w\"> </span>x64<span class=\"p\">;</span><span class=\"w\"> </span>Trident/7.0<span class=\"p\">;</span><span class=\"w\"> </span>MAARJS<span class=\"p\">;</span><span class=\"w\"> </span>rv:11.0<span class=\"o\">)</span><span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>Linux<span class=\"p\">;</span><span class=\"w\"> </span>Android<span class=\"w\"> </span><span class=\"m\">5</span>.0<span class=\"p\">;</span><span class=\"w\"> </span>SAMSUNG<span class=\"w\"> </span>SM-N900T<span class=\"w\"> </span>Build/LRX21V<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/537.36<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>SamsungBrowser/2.1<span class=\"w\"> </span>Chrome/34.0.1847.76<span class=\"w\"> </span>Mobile<span class=\"w\"> </span>Safari/537.36\n<span class=\"w\">    </span>Mozilla/5.0<span class=\"w\"> </span><span class=\"o\">(</span>iPhone<span class=\"p\">;</span><span class=\"w\"> </span>CPU<span class=\"w\"> </span>iPhone<span class=\"w\"> </span>OS<span class=\"w\"> </span>8_4<span class=\"w\"> </span>like<span class=\"w\"> </span>Mac<span class=\"w\"> </span>OS<span class=\"w\"> </span>X<span class=\"o\">)</span><span class=\"w\"> </span>AppleWebKit/600.1.4<span class=\"w\"> </span><span class=\"o\">(</span>KHTML,<span class=\"w\"> </span>like<span class=\"w\"> </span>Gecko<span class=\"o\">)</span><span class=\"w\"> </span>GSA/7.0.55539<span class=\"w\"> </span>Mobile/12H143<span class=\"w\"> </span>Safari/600.1.4\n</code></pre>\n</div>\n\n<p>The default constructor loads the usragents from the file</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">ua_handler</span> <span class=\"o\">=</span> <span class=\"n\">UserAgentHandler</span><span class=\"p\">()</span>\n<span class=\"n\">ua_handler</span><span class=\"o\">.</span><span class=\"n\">useragents_list</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<pre><code>['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/37.0.2062.94 Chrome/37.0.2062.94 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',\n 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0',\n 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/600.8.9 (KHTML, like Gecko) Version/8.0.8 Safari/600.8.9']\n</code></pre>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>We can force obtaining the useragents from the Internet with the flag: <code>use_file=False</code></p>\n\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">ua_handler</span> <span class=\"o\">=</span> <span class=\"n\">UserAgentHandler</span><span class=\"p\">(</span><span class=\"n\">use_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">ua_handler</span><span class=\"o\">.</span><span class=\"n\">useragents_list</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n</code></pre>\n</div>\n\n<p>Once the class is initialized, it can provide a random useragent to the object <strong>RequestHandler</strong> to perform the request</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">useragents</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ua_handler</span><span class=\"o\">.</span><span class=\"n\">get_next_useragent</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span>\n<span class=\"n\">useragents</span>\n</code></pre>\n</div>\n\n<pre><code>['Mozilla/5.0 (Linux; Android 4.4.2; RCT6773W22 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; MDDCJS; rv:11.0) like Gecko',\n 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/34.0.1847.116 Chrome/34.0.1847.116 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; MDDCJS; rv:11.0) like Gecko',\n 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:40.0) Gecko/20100101 Firefox/40.0.2 Waterfox/40.0.2',\n 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E)',\n 'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36',\n 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0']\n</code></pre>\n\n<h3 id=\"class-requesthandler\">Class <strong>RequestHandler</strong></h3>\n\n<p>It is the main class of the <strong>MyRequest</strong> package and makes use of the <strong>ProxyHandler</strong> and <strong>UserAgentHandler</strong> classes to obtain the proxies and user agents that will be used in the web requests that is responsible for performing.</p>\n\n<p>The default constructor does not receive parameters, the class will manage to instantize their units and use the default configuration</p>\n\n<p><strong>Make a request</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">RequestJob</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;networkx&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/networkx/&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"n\">RequestHandler</span><span class=\"p\">()</span>\n<span class=\"n\">finalized_job</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">do_request</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>As a result we obtain the ResponseJob object but with the data of the response</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"sa\">f</span><span class=\"s1\">&#39;Key: </span><span class=\"si\">{</span><span class=\"n\">finalized_job</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">+</span>\n    <span class=\"sa\">f</span><span class=\"s1\">&#39;URL: </span><span class=\"si\">{</span><span class=\"n\">finalized_job</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">+</span>\n    <span class=\"sa\">f</span><span class=\"s1\">&#39;Response: </span><span class=\"si\">{</span><span class=\"n\">finalized_job</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">+</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>Key: networkx\nURL: https://www.pypi.org/project/networkx/\nResponse: &lt;Response [200]&gt;\n</code></pre>\n\n<p><strong>Do parallel requests</strong></p>\n\n<p>We can make parallel requests through the use of Threads, it is safe to do so since the class is prepared for it</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># MyLogger().disable()</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Initialize **RequestHandler**</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tqdm</span> <span class=\"kn\">import</span> <span class=\"n\">tqdm</span>\n<span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"o\">**</span><span class=\"n\">RequestHandler</span><span class=\"o\">**</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Initialize RequestJobs</span>\n<span class=\"n\">request_jobs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;networkx&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/networkx/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;pandas&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/pandas/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/numpy/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;matplotlib&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/matplotlib/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;scipy&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/scipy/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;scikit-learn&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/scikit-learn/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;tensorflow&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/tensorflow/&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;keras&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.pypi.org/project/keras/&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># Set number of workers</span>\n<span class=\"n\">num_workers</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n\n<span class=\"c1\"># Initialize progress bar</span>\n<span class=\"n\">progress_bar</span> <span class=\"o\">=</span> <span class=\"n\">tqdm</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">request_jobs</span><span class=\"p\">))</span>\n\n<span class=\"n\">finalized_jobs</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">do_requests</span><span class=\"p\">(</span>\n    <span class=\"n\">request_jobs</span><span class=\"o\">=</span><span class=\"n\">request_jobs</span><span class=\"p\">,</span>\n    <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"n\">num_workers</span><span class=\"p\">,</span>\n    <span class=\"n\">progress_bar</span><span class=\"o\">=</span><span class=\"n\">progress_bar</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>As a result we get a list of ResponseJob objects</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">job</span> <span class=\"ow\">in</span> <span class=\"n\">finalized_jobs</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Key: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s1\">, URL: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"s1\">, Response: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<pre><code>Key: networkx, URL: https://www.pypi.org/project/networkx/, Response: &lt;Response [200]&gt;\nKey: tensorflow, URL: https://www.pypi.org/project/tensorflow/, Response: &lt;Response [200]&gt;\nKey: pandas, URL: https://www.pypi.org/project/pandas/, Response: &lt;Response [200]&gt;\nKey: keras, URL: https://www.pypi.org/project/keras/, Response: &lt;Response [200]&gt;\nKey: numpy, URL: https://www.pypi.org/project/numpy/, Response: &lt;Response [200]&gt;\nKey: scikit-learn, URL: https://www.pypi.org/project/scikit-learn/, Response: &lt;Response [200]&gt;\nKey: matplotlib, URL: https://www.pypi.org/project/matplotlib/, Response: &lt;Response [200]&gt;\nKey: scipy, URL: https://www.pypi.org/project/scipy/, Response: &lt;Response [200]&gt;\n</code></pre>\n\n<p>The Job object contains the response to request</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">finalized_jobs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">[</span><span class=\"mi\">10000</span><span class=\"p\">:</span><span class=\"mi\">20000</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>    ss=&quot;split-layout split-layout--middle package-description&quot;&gt;\n\n          <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;package-description__summary&quot;</span><span class=\"p\">&gt;</span>Python package for creating and manipulating graphs and networks<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-html-include</span><span class=\"o\">=</span><span class=\"s\">&quot;/_includes/edit-project-button/networkx&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">data-controller</span><span class=\"o\">=</span><span class=\"s\">&quot;project-tabs&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;tabs-container&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;vertical-tabs&quot;</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;vertical-tabs__tabs&quot;</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;sidebar-section&quot;</span><span class=\"p\">&gt;</span>\n              <span class=\"p\">&lt;</span><span class=\"nt\">h3</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;sidebar-section__title&quot;</span><span class=\"p\">&gt;</span>Navigation<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n              <span class=\"p\">&lt;</span><span class=\"nt\">nav</span> <span class=\"na\">aria-label</span><span class=\"o\">=</span><span class=\"s\">&quot;Navigation for networkx&quot;</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">ul</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;vertical-tabs__list&quot;</span> <span class=\"na\">role</span><span class=\"o\">=</span><span class=\"s\">&quot;tablist&quot;</span><span class=\"p\">&gt;</span>\n                  <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">role</span><span class=\"o\">=</span><span class=\"s\">&quot;tab&quot;</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;description-tab&quot;</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;#description&quot;</span> <span class=\"na\">data-project-tabs-target</span><span class=\"o\">=</span><span class=\"s\">&quot;tab&quot;</span> <span class=\"na\">data-action</span><span class=\"o\">=</span><span class=\"s\">&quot;project-tabs#onTabClick&quot;</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--is-active&quot;</span> <span class=\"na\">aria-selected</span><span class=\"o\">=</span><span class=\"s\">&quot;true&quot;</span> <span class=\"na\">aria-label</span><span class=\"o\">=</span><span class=\"s\">&quot;Project description. Focus will be moved to the description.&quot;</span><span class=\"p\">&gt;</span>\n                      <span class=\"p\">&lt;</span><span class=\"nt\">i</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;fa fa-align-left&quot;</span> <span class=\"na\">aria-hidden</span><span class=\"o\">=</span><span class=\"s\">&quot;true&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">i</span><span class=\"p\">&gt;</span>\n                      Project description\n                    <span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n                  <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n                  <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">role</span><span class=\"o\">=</span><span class=\"s\">&quot;tab&quot;</span><span class=\"p\">&gt;</span>\n</code></pre>\n</div>\n"}, {"fullname": "olivia_finder.myrequests.job", "modulename": "olivia_finder.myrequests.job", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.job.RequestJob", "modulename": "olivia_finder.myrequests.job", "qualname": "RequestJob", "kind": "class", "doc": "<p>A class to represent a job to be done by a worker.</p>\n"}, {"fullname": "olivia_finder.myrequests.job.RequestJob.__init__", "modulename": "olivia_finder.myrequests.job", "qualname": "RequestJob.__init__", "kind": "function", "doc": "<p>Constructor</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (object):\nKey to identify the job</li>\n<li><strong>url</strong> (str):\nURL to do the request</li>\n<li><strong>params</strong> (dict[str, str]):\nParameters to pass to the request</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.myrequests.job.RequestJob.set_response", "modulename": "olivia_finder.myrequests.job", "qualname": "RequestJob.set_response", "kind": "function", "doc": "<p>Set the response of the job</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>job_response</strong> (requests.Response):\nResponse of the request</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">job_response</span><span class=\"p\">:</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.job.RequestJob.end_job_signal", "modulename": "olivia_finder.myrequests.job", "qualname": "RequestJob.end_job_signal", "kind": "function", "doc": "<p>Returns a job that signals the worker to end</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>RequestJob</strong>: A job that signals the worker to end</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">RequestJob</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.proxy_builders", "modulename": "olivia_finder.myrequests.proxy_builders", "kind": "module", "doc": "<h2 id=\"submodules-of-proxy_builders-package\">Submodules of proxy_builders package:</h2>\n\n<ul>\n<li><code>olivia_finder.myrequests.proxy_builders.ssl_proxies.SSLProxiesBuilder</code></li>\n<li><code>olivia_finder.myrequests.proxy_builders.list_builder.ListProxyBuilder</code></li>\n</ul>\n"}, {"fullname": "olivia_finder.myrequests.proxy_builders.list_builder", "modulename": "olivia_finder.myrequests.proxy_builders.list_builder", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.proxy_builders.list_builder.ListProxyBuilder", "modulename": "olivia_finder.myrequests.proxy_builders.list_builder", "qualname": "ListProxyBuilder", "kind": "class", "doc": "<p>A generic proxy builder implementation, gets the proxies from a list in the format ip:port</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>url</strong> (str):\nURL of the proxy list website to get the proxies</li>\n<li><strong>request_timeout</strong> (int):\nTimeout for the proxy list requests</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If url parameter is None</li>\n</ul>\n", "bases": "olivia_finder.myrequests.proxy_builders.proxy_builder.ProxyBuilder"}, {"fullname": "olivia_finder.myrequests.proxy_builders.list_builder.ListProxyBuilder.__init__", "modulename": "olivia_finder.myrequests.proxy_builders.list_builder", "qualname": "ListProxyBuilder.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">request_timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span>)</span>"}, {"fullname": "olivia_finder.myrequests.proxy_builders.proxy_builder", "modulename": "olivia_finder.myrequests.proxy_builders.proxy_builder", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.proxy_builders.proxy_builder.ProxyBuilder", "modulename": "olivia_finder.myrequests.proxy_builders.proxy_builder", "qualname": "ProxyBuilder", "kind": "class", "doc": "<p>Abstract class to represent a proxy builder</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>This class can't be instantiated directly, use a subclass instead</p>\n\n</div>\n\n<ul>\n<li><code>olivia_finder.myrequests.proxy_builders.ssl_proxies.SSLProxiesBuilder</code></li>\n<li><code>olivia_finder.myrequests.proxy_builders.list_builder.ListProxyBuilder</code></li>\n</ul>\n", "bases": "abc.ABC"}, {"fullname": "olivia_finder.myrequests.proxy_builders.proxy_builder.ProxyBuilder.__init__", "modulename": "olivia_finder.myrequests.proxy_builders.proxy_builder", "qualname": "ProxyBuilder.__init__", "kind": "function", "doc": "<p>Constructor</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>url</strong> (str):\nURL of the proxy list website to get the proxies</li>\n<li><strong>request_timeout</strong> (int):\nTimeout for the proxy list requests</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">request_timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.myrequests.proxy_builders.proxy_builder.ProxyBuilder.get_proxies", "modulename": "olivia_finder.myrequests.proxy_builders.proxy_builder", "qualname": "ProxyBuilder.get_proxies", "kind": "function", "doc": "<p>Get the proxies from the website, parse the response and return a list of proxies</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: A list of proxies</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>Exception</strong>: If there is an error getting the proxies</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">proxy_builders.ssl_proxies</span> <span class=\"kn\">import</span> <span class=\"n\">SSLProxies</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ssl_proxies</span> <span class=\"o\">=</span> <span class=\"n\">SSLProxies</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">proxies</span> <span class=\"o\">=</span> <span class=\"n\">ssl_proxies</span><span class=\"o\">.</span><span class=\"n\">get_proxies</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.proxy_builders.ssl_proxies", "modulename": "olivia_finder.myrequests.proxy_builders.ssl_proxies", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.proxy_builders.ssl_proxies.SSLProxiesBuilder", "modulename": "olivia_finder.myrequests.proxy_builders.ssl_proxies", "qualname": "SSLProxiesBuilder", "kind": "class", "doc": "<p>SSLProxies proxy builder, gets the proxies from <a href=\"https://www.sslproxies.org/\">https://www.sslproxies.org/</a></p>\n\n<p>Implements the abstract method <code>ProxyBuilder._parse_request()</code> to parse the response</p>\n", "bases": "olivia_finder.myrequests.proxy_builders.proxy_builder.ProxyBuilder"}, {"fullname": "olivia_finder.myrequests.proxy_builders.ssl_proxies.SSLProxiesBuilder.__init__", "modulename": "olivia_finder.myrequests.proxy_builders.ssl_proxies", "qualname": "SSLProxiesBuilder.__init__", "kind": "function", "doc": "<p>Constructor</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>url</strong> (str):\nURL of the proxy list website to get the proxies</li>\n<li><strong>request_timeout</strong> (int):\nTimeout for the proxy list requests</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">request_timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span>)</span>"}, {"fullname": "olivia_finder.myrequests.proxy_handler", "modulename": "olivia_finder.myrequests.proxy_handler", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.request_handler", "modulename": "olivia_finder.myrequests.request_handler", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.request_handler.RequestHandler", "modulename": "olivia_finder.myrequests.request_handler", "qualname": "RequestHandler", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.request_handler.RequestHandler.__init__", "modulename": "olivia_finder.myrequests.request_handler", "qualname": "RequestHandler.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "olivia_finder.myrequests.request_handler.RequestHandler.do_requests", "modulename": "olivia_finder.myrequests.request_handler", "qualname": "RequestHandler.do_requests", "kind": "function", "doc": "<p>Do the requests</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List of RequestJob objects</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"n\">RequestHandler</span><span class=\"p\">(</span><span class=\"n\">jobs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">do_requests</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;key: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s1\">, url: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"s1\">, response: </span><span class=\"si\">{</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">request_jobs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">RequestJob</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">num_workers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"n\">tqdm</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">tqdm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.request_handler.RequestHandler.do_request", "modulename": "olivia_finder.myrequests.request_handler", "qualname": "RequestHandler.do_request", "kind": "function", "doc": "<p>Do a single request</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>job</strong> (RequestJob):\nThe RequestJob object</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>RequestJob</strong>: The RequestJob object with the response</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"n\">RequestHandler</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">RequestJob</span><span class=\"p\">(</span><span class=\"s2\">&quot;single_job&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://www.google.com&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">do_request</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;key: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s1\">, url: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"s1\">, response: </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">job</span><span class=\"p\">:</span> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">myrequests</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">RequestJob</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.request_worker", "modulename": "olivia_finder.myrequests.request_worker", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.myrequests.request_worker.RequestWorker", "modulename": "olivia_finder.myrequests.request_worker", "qualname": "RequestWorker", "kind": "class", "doc": "<p>RequestWorker class, inherits from Thread, so it can be run in parallel\nThis class is responsible for doing the requests and storing the results in the RequestJob objects\nUse the run() method to start the worker\nThe worker has a queue of RequestJob objects, it will get the next job from the queue and do the request\nThe worker has access to the ProxyHandler and UserAgentHandler objects, so it can get a proxy and a user agent for each request\nThe worker will store the results in the RequestJob object and add it to the list of jobs that it has done\nThe worker will keep working till it receives an exit string from the queue\nThe exit string is a RequestJob object with key = RequestJob.FINALIZE_KEY</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>worker_id</strong> (int):\nId of the worker</li>\n<li><strong>jobs_queue</strong> (queue.Queue):\nQueue of RequestJob objects</li>\n<li><strong>my_jobs</strong> (list[RequestJob]):\nList of RequestJob objects that the worker has done</li>\n<li><strong>proxy_handler</strong> (ProxyHandler):\nProxyHandler object</li>\n<li><strong>user_agent_handler</strong> (UserAgentHandler):\nUserAgentHandler object</li>\n<li><strong>stopped</strong> (bool):\nFlag to stop the worker</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>worker_id</strong> (int):\nId of the worker</li>\n<li><strong>jobs_queue</strong> (queue.Queue):\nQueue of RequestJob objects</li>\n<li><strong>progress_bar</strong> (tqdm.tqdm):\nProgress bar, if None, no progress bar will be shown</li>\n</ul>\n", "bases": "threading.Thread"}, {"fullname": "olivia_finder.myrequests.request_worker.RequestWorker.__init__", "modulename": "olivia_finder.myrequests.request_worker", "qualname": "RequestWorker.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">jobs_queue</span><span class=\"p\">:</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">Queue</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"n\">tqdm</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">tqdm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.myrequests.request_worker.RequestWorker.run", "modulename": "olivia_finder.myrequests.request_worker", "qualname": "RequestWorker.run", "kind": "function", "doc": "<p>Run the worker</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.myrequests.useragent_handler", "modulename": "olivia_finder.myrequests.useragent_handler", "kind": "module", "doc": "<div class=\"pdoc-alert pdoc-alert-danger\">\n\n<p>Remove the @singleton decorator before documenting the class\nDoc fails with the @singleton decorator</p>\n\n</div>\n"}, {"fullname": "olivia_finder.package", "modulename": "olivia_finder.package", "kind": "module", "doc": "<h1 id=\"packagepy\">package.py</h1>\n\n<h6 id=\"description\">Description</h6>\n\n<p>Module that contains the class that represents a package in the network</p>\n\n<p>File information:\n    - File: package.py\n    - Project: olivia_finder\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.package.Package", "modulename": "olivia_finder.package", "qualname": "Package", "kind": "class", "doc": "<p>Class that represents a package in the network</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the package</li>\n<li><strong>version</strong> (str = None):\nVersion of the package</li>\n<li><strong>url</strong> (str = None):\nURL of the package</li>\n<li><strong>dependencies</strong> (list[Package] = None):\nList of dependencies of the package</li>\n</ul>\n"}, {"fullname": "olivia_finder.package.Package.__init__", "modulename": "olivia_finder.package", "qualname": "Package.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependencies</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.package.Package.print", "modulename": "olivia_finder.package", "qualname": "Package.print", "kind": "function", "doc": "<p>Print the package data in the console</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://numpy.org&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>Package:\n    name: package\n    version: 1.0.0\n    url: <a href=\"https://package.org\">https://package.org</a>\n    dependencies:\n        dependency1:1.0.0\n        dependency2:1.0.0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package.Package.update", "modulename": "olivia_finder.package", "qualname": "Package.update", "kind": "function", "doc": "<p>Update the package with the data of a dictionary.\nOnly the attributes version, url and dependencies are supported.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (dict):\ndictionary with the data to update</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://numpy.org&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s2\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0.1&quot;</span><span class=\"p\">})</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package.Package.to_dict", "modulename": "olivia_finder.package", "qualname": "Package.to_dict", "kind": "function", "doc": "<p>Convert the package to a dictionary with the following structure:\n    {\n        'name': str,\n        'version': str,\n        'url': str,\n        'dependencies': list[dict]\n    }</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: dictionary with the data of the package</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://numpy.org&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package.Package.load", "modulename": "olivia_finder.package", "qualname": "Package.load", "kind": "function", "doc": "<p>Loads a package from a dictionary. \nIt is assumed that the dictionary has the following structure::</p>\n\n<pre><code>{   \n    'name': str,\n    'version': str,\n    'url': str,\n    'dependencies': list[dict]\n}\n</code></pre>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (dict):\ndictionary with the data</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Package</strong>: Package loaded from the dictionary</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span>\n<span class=\"go\">        {&quot;name&quot;: &quot;numpy&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;url&quot;: &quot;https://numpy.org&quot;}</span>\n<span class=\"go\">    )</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package.Package.get_dependencies_names", "modulename": "olivia_finder.package", "qualname": "Package.get_dependencies_names", "kind": "function", "doc": "<p>Get the names of the dependencies of the package or an empty list if there are no dependencies</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: List with the names of the dependencies</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">olivia_finder.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">Package</span><span class=\"p\">(</span><span class=\"s2\">&quot;numpy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1.0.0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;https://numpy.org&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">get_dependencies_names</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager", "modulename": "olivia_finder.package_manager", "kind": "module", "doc": "<h6 id=\"description\">Description</h6>\n\n<p>Module that contains the PackageManager class, which represents a package manager, which provides a \nway to obtain packages from a data source and store them</p>\n\n<p>File information:\n    - File: package_manager.py\n    - Project: olivia_finder\n    - Created Date: 2023-03-18 14:40:56\n    - Author: Daniel Alonso B\u00e1scones\n    - Copyright (c) 2023 Daniel Alonso B\u00e1scones</p>\n"}, {"fullname": "olivia_finder.package_manager.PackageManager", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.package_manager.PackageManager.__init__", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.__init__", "kind": "function", "doc": "<p>Constructor</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">data_sources</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">data_source</span><span class=\"o\">.</span><span class=\"n\">DataSource</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.package_manager.PackageManager.save_package_manager", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.save_package_manager", "kind": "function", "doc": "<p>Saves the package manager to a file, normally it has the extension .olvpm for easy identification\nas an Olivia package manager file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nPath of the file to save the package manager</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.load_package_manager", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.load_package_manager", "kind": "function", "doc": "<p>Load the package manager from a file, the file must have been created with the save method\nNormally, it has the extension .olvpm</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nPath of the file to load the package manager</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Union[PackageManager, None]</strong>: PackageManager object if the file exists and is valid, None otherwise</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.initialize", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.initialize", "kind": "function", "doc": "<p>Initializes the package manager by loading the packages from the data source</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_list</strong> (list[str]):\nList of package names to load, if None, all the packages will be loaded</li>\n<li><strong>show_progress</strong> (bool):\nIf True, a progress bar will be shown</li>\n<li><strong>chunk_size</strong> (int):\nSize of the chunks to load the packages, this is done to avoid memory errors</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">show_progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.obtain_package", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.obtain_package", "kind": "function", "doc": "<p>Builds a Package object using the data sources in order until one of them returns a valid package</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nName of the package</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Union[Package, None]</strong>: Package object if the package exists, None otherwise</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">obtain_package</span><span class=\"p\">(</span><span class=\"s2\">&quot;package_name&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span>\n<span class=\"go\">&lt;Package: package_name&gt;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.obtain_packages", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.obtain_packages", "kind": "function", "doc": "<p>Builds a list of Package objects using the data sources in order until one of them returns a valid package</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_names</strong> (Optional[list[str]]):\nList of package names to load, if None, all the packages will be loaded</li>\n<li><strong>progress_bar</strong> (Optional[tqdm.tqdm]):\nProgress bar to show the progress of the loading</li>\n<li><strong>extend</strong> (bool):\nIf True, the packages will be added to the package manager</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[Package]</strong>: List of Package objects</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">packages</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">obtain_packages</span><span class=\"p\">([</span><span class=\"s2\">&quot;package_name_1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;package_name_2&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">packages</span>\n<span class=\"go\">[&lt;Package: package_name_1&gt;, &lt;Package: package_name_2&gt;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">package_names</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">progress_bar</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">tqdm</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"o\">.</span><span class=\"n\">tqdm</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">extend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.load_csv_adjlist", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.load_csv_adjlist", "kind": "function", "doc": "<p>Load a csv file into a PackageManager object</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>csv_path</strong> (str):\nPath of the csv file to load</li>\n<li><strong>dependent_field</strong> (str = None, optional):\nName of the dependent field, by default None</li>\n<li><strong>dependency_field</strong> (str = None, optional):\nName of the dependency field, by default None</li>\n<li><strong>version_field</strong> (str = None, optional):\nName of the version field, by default None</li>\n<li><strong>dependency_version_field</strong> (str = None, optional):\nName of the dependency version field, by default None</li>\n<li><strong>url_field</strong> (str = None, optional):\nName of the url field, by default None</li>\n<li><strong>default_format</strong> (bool, optional):\nIf True, the csv has the structure of full_adjlist.csv, by default False</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">PackageManager</span><span class=\"o\">.</span><span class=\"n\">load_csv_adjlist</span><span class=\"p\">(</span>\n<span class=\"go\">    &quot;full_adjlist.csv&quot;,</span>\n<span class=\"go\">    dependent_field=&quot;dependent&quot;,</span>\n<span class=\"go\">    dependency_field=&quot;dependency&quot;,</span>\n<span class=\"go\">    version_field=&quot;version&quot;,</span>\n<span class=\"go\">    dependency_version_field=&quot;dependency_version&quot;,</span>\n<span class=\"go\">    url_field=&quot;url&quot;</span>\n<span class=\"go\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">PackageManager</span><span class=\"o\">.</span><span class=\"n\">load_csv_adjlist</span><span class=\"p\">(</span><span class=\"s2\">&quot;full_adjlist.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_format</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">csv_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dependent_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependency_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dependency_version_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">url_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">PackageManager</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.get_package", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.get_package", "kind": "function", "doc": "<p>Obtain a package from the package manager</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nName of the package</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Union[Package, None]</strong>: Package object if the package exists, None otherwise</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">get_package</span><span class=\"p\">(</span><span class=\"s2\">&quot;package_name&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.list_packages", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.list_packages", "kind": "function", "doc": "<p>Obtain the list of packages of the package manager</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[Package]</strong>: List of packages of the package manager</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package_list</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">get_package_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.list_package_names", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.list_package_names", "kind": "function", "doc": "<p>Obtain the list of package names of the package manager</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list[str]</strong>: List of package names of the package manager</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">package_names</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">get_package_names</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.export_adjlist", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.export_adjlist", "kind": "function", "doc": "<p>Convert the object to a adjacency list, where each row represents a dependency\nIf a package has'nt dependencies, it will appear in the list with dependency field empty</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>full_data</strong> (bool, optional):\nIf True, the adjacency list will contain the version and url of the packages, by default False</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: Dependency network as an adjacency list</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">adj_list</span> <span class=\"o\">=</span> <span class=\"n\">package_manager</span><span class=\"o\">.</span><span class=\"n\">export_adjlist</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">adj_list</span><span class=\"p\">)</span>\n<span class=\"go\">    [name, dependency]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">full_data</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManager.dependency_network", "modulename": "olivia_finder.package_manager", "qualname": "PackageManager.dependency_network", "kind": "function", "doc": "<p>Generates the dependency network of a package from the data source.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>package_name</strong> (str):\nThe name of the package to generate the dependency network</li>\n<li><strong>dependency_network</strong> (dict, optional):\nThe dependency network of the package</li>\n<li><strong>deep_level</strong> (int, optional):\nThe deep level of the dependency network, by default 5</li>\n<li><strong>generate</strong> (bool, optional):\nIf True, the dependency network will be generated from the data source, by default False</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, list[Package]]</strong>: The dependency network of the package</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">package_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dependency_network</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">deep_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">generate</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">olivia_finder</span><span class=\"o\">.</span><span class=\"n\">package</span><span class=\"o\">.</span><span class=\"n\">Package</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.package_manager.PackageManagerLoadError", "modulename": "olivia_finder.package_manager", "qualname": "PackageManagerLoadError", "kind": "class", "doc": "<p>Exception raised when an error occurs while loading a package manager</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nError message</li>\n</ul>\n", "bases": "builtins.Exception"}, {"fullname": "olivia_finder.package_manager.PackageManagerLoadError.__init__", "modulename": "olivia_finder.package_manager", "qualname": "PackageManagerLoadError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "olivia_finder.package_manager.PackageManagerSaveError", "modulename": "olivia_finder.package_manager", "qualname": "PackageManagerSaveError", "kind": "class", "doc": "<p>Exception raised when an error occurs while saving a package manager</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>message</strong> (str):\nError message</li>\n</ul>\n", "bases": "builtins.Exception"}, {"fullname": "olivia_finder.package_manager.PackageManagerSaveError.__init__", "modulename": "olivia_finder.package_manager", "qualname": "PackageManagerSaveError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, {"fullname": "olivia_finder.utilities", "modulename": "olivia_finder.utilities", "kind": "module", "doc": "<h1 id=\"subpackage-utilities\"><strong>Subpackage utilities</strong></h1>\n\n<h2 id=\"module-config\">Module config</h2>\n\n<p>Provides the configuration class, which is used to obtain the configuration variables defined in the .ini configuration file</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p>It is a Singleton instance so only one instance is accessible from any part of the code through the constructor</p>\n\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">Configuration</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">(</span><span class=\"s1\">&#39;logger&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;status&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">&#39;ENABLED&#39;</span>\n</code></pre>\n</div>\n\n<h2 id=\"module-logger\">Module logger</h2>\n\n<p>The class MyLogger implements a customized logger to register the actions of execution</p>\n\n<p>It is a Singleton instance so only one instance is accessible from any part of the code through the constructor</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_level</span><span class=\"p\">(</span><span class=\"s2\">&quot;DEBUG&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Log messages</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 2&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># disable logger</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">disable</span><span class=\"p\">()</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 3&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># re-enable logger</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">enable</span><span class=\"p\">()</span>\n\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 4&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 5&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello World 6&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># reset logger level</span>\n<span class=\"n\">MyLogger</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_level</span><span class=\"p\">(</span><span class=\"n\">Configuration</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_key</span><span class=\"p\">(</span><span class=\"s1\">&#39;logger&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;level&#39;</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">729</span> <span class=\"p\">[</span><span class=\"n\">DEBUG</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"mf\">1504849287.</span><span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1504849287.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">729</span> <span class=\"p\">[</span><span class=\"n\">INFO</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"mf\">1504849287.</span><span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1504849287.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">730</span> <span class=\"p\">[</span><span class=\"n\">WARNING</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"mf\">1504849287.</span><span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1504849287.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">14</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">730</span> <span class=\"p\">[</span><span class=\"n\">ERROR</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"mf\">1504849287.</span><span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1504849287.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">15</span> <span class=\"mi\">20</span><span class=\"p\">:</span><span class=\"mi\">31</span><span class=\"p\">:</span><span class=\"mi\">29</span><span class=\"p\">,</span><span class=\"mi\">731</span> <span class=\"p\">[</span><span class=\"n\">CRITICAL</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"mf\">1504849287.</span><span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1504849287.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"mi\">6</span>\n</code></pre>\n</div>\n\n<p>The <strong>console handler</strong> shows the different levels using indicative colors</p>\n\n<p>The <strong>file handler</strong> has the default format</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>&gt;$<span class=\"w\"> </span>cat<span class=\"w\"> </span>logs/example_log.log\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">18</span>:58:06<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Hello<span class=\"w\"> </span>World<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1008465612</span>.py:7<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">18</span>:58:06<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Hello<span class=\"w\"> </span>World<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1008465612</span>.py:8<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">18</span>:58:06<span class=\"w\"> </span><span class=\"o\">[</span>WARNING<span class=\"o\">]</span><span class=\"w\"> </span>Hello<span class=\"w\"> </span>World<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1008465612</span>.py:17<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">18</span>:58:06<span class=\"w\"> </span><span class=\"o\">[</span>ERROR<span class=\"o\">]</span><span class=\"w\"> </span>Hello<span class=\"w\"> </span>World<span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1008465612</span>.py:18<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">18</span>:58:06<span class=\"w\"> </span><span class=\"o\">[</span>CRITICAL<span class=\"o\">]</span><span class=\"w\"> </span>Hello<span class=\"w\"> </span>World<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1008465612</span>.py:19<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>RequestHandler:<span class=\"w\"> </span>Creating<span class=\"w\"> </span>RequestHandler<span class=\"w\"> </span>object\nNumber<span class=\"w\"> </span>of<span class=\"w\"> </span>jobs:<span class=\"w\"> </span><span class=\"m\">1</span>\nNumber<span class=\"w\"> </span>of<span class=\"w\"> </span>workers:<span class=\"w\"> </span><span class=\"m\">1</span>\nCreating<span class=\"w\"> </span><span class=\"nb\">jobs</span><span class=\"w\"> </span>queue<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:20<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Jobs<span class=\"w\"> </span>queue<span class=\"w\"> </span>created<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:25<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Jobs<span class=\"w\"> </span>queue<span class=\"w\"> </span>size:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:26<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Creating<span class=\"w\"> </span>workers<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:35<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Starting<span class=\"w\"> </span>new<span class=\"w\"> </span>HTTPS<span class=\"w\"> </span>connection<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>:<span class=\"w\"> </span>www.sslproxies.org:443<span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:973<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:07<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>https://www.sslproxies.org:443<span class=\"w\"> </span><span class=\"s2\">&quot;GET / HTTP/1.1&quot;</span><span class=\"w\"> </span><span class=\"m\">200</span><span class=\"w\"> </span>None<span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:452<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Found<span class=\"w\"> </span><span class=\"m\">100</span><span class=\"w\"> </span>proxies<span class=\"w\"> </span>from<span class=\"w\"> </span>SSLProxiesBuilder<span class=\"w\"> </span><span class=\"o\">(</span>proxy_builder.py:75<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Starting<span class=\"w\"> </span>new<span class=\"w\"> </span>HTTPS<span class=\"w\"> </span>connection<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>:<span class=\"w\"> </span>raw.githubusercontent.com:443<span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:973<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>https://raw.githubusercontent.com:443<span class=\"w\"> </span><span class=\"s2\">&quot;GET /mertguvencli/http-proxy-list/main/proxy-list/data.txt HTTP/1.1&quot;</span><span class=\"w\"> </span><span class=\"m\">200</span><span class=\"w\"> </span><span class=\"m\">2034</span><span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:452<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Found<span class=\"w\"> </span><span class=\"m\">307</span><span class=\"w\"> </span>proxies<span class=\"w\"> </span>from<span class=\"w\"> </span>ListProxyBuilder<span class=\"w\"> </span><span class=\"o\">(</span>proxy_builder.py:75<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Starting<span class=\"w\"> </span>new<span class=\"w\"> </span>HTTPS<span class=\"w\"> </span>connection<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>:<span class=\"w\"> </span>raw.githubusercontent.com:443<span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:973<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>https://raw.githubusercontent.com:443<span class=\"w\"> </span><span class=\"s2\">&quot;GET /TheSpeedX/SOCKS-List/master/http.txt HTTP/1.1&quot;</span><span class=\"w\"> </span><span class=\"m\">200</span><span class=\"w\"> </span><span class=\"m\">18270</span><span class=\"w\"> </span><span class=\"o\">(</span>connectionpool.py:452<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Found<span class=\"w\"> </span><span class=\"m\">2580</span><span class=\"w\"> </span>proxies<span class=\"w\"> </span>from<span class=\"w\"> </span>ListProxyBuilder<span class=\"w\"> </span><span class=\"o\">(</span>proxy_builder.py:75<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Proxies<span class=\"w\"> </span>len:<span class=\"w\"> </span><span class=\"m\">2661</span><span class=\"w\"> </span><span class=\"o\">(</span>proxy_handler.py:160<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Proxy<span class=\"w\"> </span>Handler<span class=\"w\"> </span>initialized<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"m\">2661</span><span class=\"w\"> </span>proxies<span class=\"w\"> </span><span class=\"o\">(</span>proxy_handler.py:82<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Useragents<span class=\"w\"> </span>loaded<span class=\"w\"> </span>from<span class=\"w\"> </span>file:<span class=\"w\"> </span>/home/dnllns/Documentos/repositorios/olivia-finder/olivia_finder/olivia_finder/myrequests/data/useragents.txt<span class=\"w\"> </span><span class=\"o\">(</span>useragent_handler.py:35<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Workers<span class=\"w\"> </span>created<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:40<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Number<span class=\"w\"> </span>of<span class=\"w\"> </span>workers:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:41<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:08<span class=\"w\"> </span><span class=\"o\">[</span>DEBUG<span class=\"o\">]</span><span class=\"w\"> </span>Worker<span class=\"w\"> </span><span class=\"m\">0</span>:<span class=\"w\"> </span>Got<span class=\"w\"> </span>job<span class=\"w\"> </span>from<span class=\"w\"> </span>queue\nJob<span class=\"w\"> </span>key:<span class=\"w\"> </span>networkx\nurl:<span class=\"w\"> </span>https://www.pypi.org/project/networkx/<span class=\"w\"> </span><span class=\"o\">(</span>request_worker.py:67<span class=\"o\">)</span>\n...\nurl:<span class=\"w\"> </span>None<span class=\"w\"> </span><span class=\"o\">(</span>request_worker.py:67<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Joining<span class=\"w\"> </span>worker<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:67<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Joining<span class=\"w\"> </span>worker<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:67<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Joining<span class=\"w\"> </span>worker<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:67<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Worker<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>finished<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:73<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Worker<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>finished<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:73<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Worker<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>finished<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:73<span class=\"o\">)</span>\n<span class=\"m\">2023</span>-04-25<span class=\"w\"> </span><span class=\"m\">19</span>:00:13<span class=\"w\"> </span><span class=\"o\">[</span>INFO<span class=\"o\">]</span><span class=\"w\"> </span>Worker<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span>finished<span class=\"w\"> </span><span class=\"o\">(</span>request_handler.py:73<span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"module-utilities\">Module utilities</h2>\n\n<p>Includes some utilities to work with the module</p>\n\n<h2 id=\"module-exceptions\">Module exceptions</h2>\n\n<p>Includes some exceptions to work with the module</p>\n"}, {"fullname": "olivia_finder.utilities.config", "modulename": "olivia_finder.utilities.config", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.utilities.exception", "modulename": "olivia_finder.utilities.exception", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.utilities.exception.OliviaFinderException", "modulename": "olivia_finder.utilities.exception", "qualname": "OliviaFinderException", "kind": "class", "doc": "<p>Base class for exceptions in this module.</p>\n", "bases": "builtins.Exception"}, {"fullname": "olivia_finder.utilities.exception.OliviaFinderException.__init__", "modulename": "olivia_finder.utilities.exception", "qualname": "OliviaFinderException.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span>, </span><span class=\"param\"><span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "olivia_finder.utilities.logger", "modulename": "olivia_finder.utilities.logger", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.utilities.logger.ConsoleFormatter", "modulename": "olivia_finder.utilities.logger", "qualname": "ConsoleFormatter", "kind": "class", "doc": "<p>Custom formatter class that implements the ANSI escape sequences\nto color the log messages based on the logging level</p>\n", "bases": "logging.Formatter"}, {"fullname": "olivia_finder.utilities.logger.ConsoleFormatter.format", "modulename": "olivia_finder.utilities.logger", "qualname": "ConsoleFormatter.format", "kind": "function", "doc": "<p>Format the specified record as text.</p>\n\n<p>The record's attribute dictionary is used as the operand to a\nstring formatting operation which yields the returned string.\nBefore formatting the dictionary, a couple of preparatory steps\nare carried out. The message attribute of the record is computed\nusing LogRecord.getMessage(). If the formatting string uses the\ntime (as determined by a call to usesTime(), formatTime() is\ncalled to format the event time. If there is exception information,\nit is formatted using formatException() and appended to the message.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "olivia_finder.utilities.utilities", "modulename": "olivia_finder.utilities.utilities", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "olivia_finder.utilities.utilities.clean_string", "modulename": "olivia_finder.utilities.utilities", "qualname": "clean_string", "kind": "function", "doc": "<p>Clean a string from whitespaces and newlines</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>string</strong> (str):\nString to be cleaned</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: Cleaned string</li>\n</ul>\n\n<h6 id=\"examples\">Examples</h6>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Util</span><span class=\"o\">.</span><span class=\"n\">clean_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello world&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;Hello world&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Util</span><span class=\"o\">.</span><span class=\"n\">clean_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello world</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;Hello world&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Util</span><span class=\"o\">.</span><span class=\"n\">clean_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello   world</span><span class=\"se\">\\n\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;Hello world&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();