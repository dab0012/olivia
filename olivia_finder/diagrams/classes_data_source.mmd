classDiagram
  class BioconductorScraper {
    BIOCONDUCTOR_LIST_URL : str
    BIOCONDUCTOR_PACKAGE_DATA_URL : str
    obtain_package_names() List[str]
  }
  class CSVDataSource {
    data : NoneType, Optional[pd.DataFrame], TextFileReader
    dependency_field : Optional[str]
    dependency_version_field : Optional[str]
    dependent_field : Optional[str]
    dependent_url_field : Optional[str]
    dependent_version_field : Optional[str]
    file_path : str
    obtain_package_data(package_name: str, override_previous: bool) dict
    obtain_package_names() List[str]
    obtain_packages_data(package_names: List[str], progress_bar: Optional[tqdm.tqdm]) tuple[List[dict], List[str]]
  }
  class CranScraper {
    CRAN_PACKAGE_DATA_URL : str
    CRAN_PACKAGE_LIST_URL : str
    obtain_package_names() List[str]
  }
  class DataSource {
    logger : NoneType, Logger, RootLogger
    obtain_package_data(package_name: str)* dict
    obtain_package_names()* List[str]
    obtain_packages_data(package_names: List[str])* List[dict]
  }
  class GithubScraper {
    obtain_package_data(package_name: str) Union[dict, None]
    obtain_package_names()* List[str]
  }
  class LibrariesioDataSource {
    DEFAULT_DESCRIPTION : str
    platform : str
    search : Search
    obtain_package_data(package_name: str) Union[dict, None]
    obtain_package_names()* List[str]
    obtain_packages_data(package_names: List[str]) List[dict]
  }
  class NpmScraper {
    NPM_PACKAGE_LIST_URL : str
    NPM_PACKAGE_REGISTRY_URL : str
    NPM_REPO_URL : str
    chunks_folder : NoneType
    obtain_package_names(page_size: int, show_progress_bar: bool, save_chunks: bool) List[dict]
  }
  class PypiScraper {
    PYPI_PACKAGE_DATA_URL : str
    PYPI_PACKAGE_LIST_URL : str
    obtain_package_names() List[str]
  }
  class ScraperDataSource {
    not_found : list
    request_handler : NoneType, RequestHandler
    obtain_package_data(package_name: str) Union[dict, None]
    obtain_package_names()* List[str]
    obtain_packages_data(package_names: Optional[List[str]], progress_bar: Optional[tqdm.tqdm]) Tuple[List[Dict], List[str]]
  }
  class ScraperError {
  }
  CSVDataSource --|> DataSource
  LibrariesioDataSource --|> DataSource
  BioconductorScraper --|> ScraperDataSource
  CranScraper --|> ScraperDataSource
  GithubScraper --|> ScraperDataSource
  NpmScraper --|> ScraperDataSource
  PypiScraper --|> ScraperDataSource
  ScraperDataSource --|> DataSource
